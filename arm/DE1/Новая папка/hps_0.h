#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_PIO_LED_BASE 0x0
#define HPS_0_PIO_LED_SPAN 32
#define HPS_0_PIO_LED_END 0x1f
#define HPS_0_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PIO_LED_CAPTURE 0
#define HPS_0_PIO_LED_DATA_WIDTH 10
#define HPS_0_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_PIO_LED_EDGE_TYPE NONE
#define HPS_0_PIO_LED_FREQ 56000000
#define HPS_0_PIO_LED_HAS_IN 0
#define HPS_0_PIO_LED_HAS_OUT 1
#define HPS_0_PIO_LED_HAS_TRI 0
#define HPS_0_PIO_LED_IRQ_TYPE NONE
#define HPS_0_PIO_LED_RESET_VALUE 0

/*
 * Macros for device 'n_frame', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_N_FRAME_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_N_FRAME_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_N_FRAME_COMPONENT_NAME n_frame
#define HPS_0_N_FRAME_BASE 0x10
#define HPS_0_N_FRAME_SPAN 32
#define HPS_0_N_FRAME_END 0x2f
#define HPS_0_N_FRAME_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_N_FRAME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_N_FRAME_CAPTURE 0
#define HPS_0_N_FRAME_DATA_WIDTH 32
#define HPS_0_N_FRAME_DO_TEST_BENCH_WIRING 0
#define HPS_0_N_FRAME_DRIVEN_SIM_VALUE 0
#define HPS_0_N_FRAME_EDGE_TYPE NONE
#define HPS_0_N_FRAME_FREQ 56000000
#define HPS_0_N_FRAME_HAS_IN 1
#define HPS_0_N_FRAME_HAS_OUT 0
#define HPS_0_N_FRAME_HAS_TRI 0
#define HPS_0_N_FRAME_IRQ_TYPE NONE
#define HPS_0_N_FRAME_RESET_VALUE 0

/*
 * Macros for device 'x_max', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_X_MAX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_X_MAX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_X_MAX_COMPONENT_NAME x_max
#define HPS_0_X_MAX_BASE 0x20
#define HPS_0_X_MAX_SPAN 32
#define HPS_0_X_MAX_END 0x3f
#define HPS_0_X_MAX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_X_MAX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_X_MAX_CAPTURE 0
#define HPS_0_X_MAX_DATA_WIDTH 16
#define HPS_0_X_MAX_DO_TEST_BENCH_WIRING 0
#define HPS_0_X_MAX_DRIVEN_SIM_VALUE 0
#define HPS_0_X_MAX_EDGE_TYPE NONE
#define HPS_0_X_MAX_FREQ 56000000
#define HPS_0_X_MAX_HAS_IN 1
#define HPS_0_X_MAX_HAS_OUT 0
#define HPS_0_X_MAX_HAS_TRI 0
#define HPS_0_X_MAX_IRQ_TYPE NONE
#define HPS_0_X_MAX_RESET_VALUE 0

/*
 * Macros for device 'x_min', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_X_MIN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_X_MIN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_X_MIN_COMPONENT_NAME x_min
#define HPS_0_X_MIN_BASE 0x30
#define HPS_0_X_MIN_SPAN 32
#define HPS_0_X_MIN_END 0x4f
#define HPS_0_X_MIN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_X_MIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_X_MIN_CAPTURE 0
#define HPS_0_X_MIN_DATA_WIDTH 16
#define HPS_0_X_MIN_DO_TEST_BENCH_WIRING 0
#define HPS_0_X_MIN_DRIVEN_SIM_VALUE 0
#define HPS_0_X_MIN_EDGE_TYPE NONE
#define HPS_0_X_MIN_FREQ 56000000
#define HPS_0_X_MIN_HAS_IN 1
#define HPS_0_X_MIN_HAS_OUT 0
#define HPS_0_X_MIN_HAS_TRI 0
#define HPS_0_X_MIN_IRQ_TYPE NONE
#define HPS_0_X_MIN_RESET_VALUE 0

/*
 * Macros for device 'req_res', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_REQ_RES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_REQ_RES_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_REQ_RES_COMPONENT_NAME req_res
#define HPS_0_REQ_RES_BASE 0x40
#define HPS_0_REQ_RES_SPAN 32
#define HPS_0_REQ_RES_END 0x5f
#define HPS_0_REQ_RES_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_REQ_RES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_REQ_RES_CAPTURE 0
#define HPS_0_REQ_RES_DATA_WIDTH 1
#define HPS_0_REQ_RES_DO_TEST_BENCH_WIRING 0
#define HPS_0_REQ_RES_DRIVEN_SIM_VALUE 0
#define HPS_0_REQ_RES_EDGE_TYPE NONE
#define HPS_0_REQ_RES_FREQ 56000000
#define HPS_0_REQ_RES_HAS_IN 0
#define HPS_0_REQ_RES_HAS_OUT 1
#define HPS_0_REQ_RES_HAS_TRI 0
#define HPS_0_REQ_RES_IRQ_TYPE NONE
#define HPS_0_REQ_RES_RESET_VALUE 0

/*
 * Macros for device 'addr_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ADDR_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ADDR_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ADDR_OUT_COMPONENT_NAME addr_out
#define HPS_0_ADDR_OUT_BASE 0x50
#define HPS_0_ADDR_OUT_SPAN 32
#define HPS_0_ADDR_OUT_END 0x6f
#define HPS_0_ADDR_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ADDR_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ADDR_OUT_CAPTURE 0
#define HPS_0_ADDR_OUT_DATA_WIDTH 8
#define HPS_0_ADDR_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ADDR_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ADDR_OUT_EDGE_TYPE NONE
#define HPS_0_ADDR_OUT_FREQ 56000000
#define HPS_0_ADDR_OUT_HAS_IN 0
#define HPS_0_ADDR_OUT_HAS_OUT 1
#define HPS_0_ADDR_OUT_HAS_TRI 0
#define HPS_0_ADDR_OUT_IRQ_TYPE NONE
#define HPS_0_ADDR_OUT_RESET_VALUE 0

/*
 * Macros for device 'box_addr', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_ADDR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_ADDR_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_ADDR_COMPONENT_NAME box_addr
#define HPS_0_BOX_ADDR_BASE 0x60
#define HPS_0_BOX_ADDR_SPAN 32
#define HPS_0_BOX_ADDR_END 0x7f
#define HPS_0_BOX_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_ADDR_CAPTURE 0
#define HPS_0_BOX_ADDR_DATA_WIDTH 8
#define HPS_0_BOX_ADDR_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_ADDR_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_ADDR_EDGE_TYPE NONE
#define HPS_0_BOX_ADDR_FREQ 56000000
#define HPS_0_BOX_ADDR_HAS_IN 1
#define HPS_0_BOX_ADDR_HAS_OUT 0
#define HPS_0_BOX_ADDR_HAS_TRI 0
#define HPS_0_BOX_ADDR_IRQ_TYPE NONE
#define HPS_0_BOX_ADDR_RESET_VALUE 0

/*
 * Macros for device 'box_n', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_N_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_N_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_N_COMPONENT_NAME box_n
#define HPS_0_BOX_N_BASE 0x70
#define HPS_0_BOX_N_SPAN 32
#define HPS_0_BOX_N_END 0x8f
#define HPS_0_BOX_N_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_N_CAPTURE 0
#define HPS_0_BOX_N_DATA_WIDTH 8
#define HPS_0_BOX_N_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_N_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_N_EDGE_TYPE NONE
#define HPS_0_BOX_N_FREQ 56000000
#define HPS_0_BOX_N_HAS_IN 1
#define HPS_0_BOX_N_HAS_OUT 0
#define HPS_0_BOX_N_HAS_TRI 0
#define HPS_0_BOX_N_IRQ_TYPE NONE
#define HPS_0_BOX_N_RESET_VALUE 0

/*
 * Macros for device 'box_req', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_REQ_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_REQ_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_REQ_COMPONENT_NAME box_req
#define HPS_0_BOX_REQ_BASE 0x80
#define HPS_0_BOX_REQ_SPAN 32
#define HPS_0_BOX_REQ_END 0x9f
#define HPS_0_BOX_REQ_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_REQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_REQ_CAPTURE 1
#define HPS_0_BOX_REQ_DATA_WIDTH 1
#define HPS_0_BOX_REQ_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_REQ_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_REQ_EDGE_TYPE RISING
#define HPS_0_BOX_REQ_FREQ 56000000
#define HPS_0_BOX_REQ_HAS_IN 1
#define HPS_0_BOX_REQ_HAS_OUT 0
#define HPS_0_BOX_REQ_HAS_TRI 0
#define HPS_0_BOX_REQ_IRQ_TYPE NONE
#define HPS_0_BOX_REQ_RESET_VALUE 0

/*
 * Macros for device 'n_pix', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_N_PIX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_N_PIX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_N_PIX_COMPONENT_NAME n_pix
#define HPS_0_N_PIX_BASE 0x90
#define HPS_0_N_PIX_SPAN 32
#define HPS_0_N_PIX_END 0xaf
#define HPS_0_N_PIX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_N_PIX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_N_PIX_CAPTURE 1
#define HPS_0_N_PIX_DATA_WIDTH 32
#define HPS_0_N_PIX_DO_TEST_BENCH_WIRING 0
#define HPS_0_N_PIX_DRIVEN_SIM_VALUE 0
#define HPS_0_N_PIX_EDGE_TYPE ANY
#define HPS_0_N_PIX_FREQ 56000000
#define HPS_0_N_PIX_HAS_IN 1
#define HPS_0_N_PIX_HAS_OUT 0
#define HPS_0_N_PIX_HAS_TRI 0
#define HPS_0_N_PIX_IRQ_TYPE NONE
#define HPS_0_N_PIX_RESET_VALUE 0

/*
 * Macros for device 'box_yn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_YN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_YN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_YN_COMPONENT_NAME box_yn
#define HPS_0_BOX_YN_BASE 0xa0
#define HPS_0_BOX_YN_SPAN 32
#define HPS_0_BOX_YN_END 0xbf
#define HPS_0_BOX_YN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_YN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_YN_CAPTURE 1
#define HPS_0_BOX_YN_DATA_WIDTH 16
#define HPS_0_BOX_YN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_YN_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_YN_EDGE_TYPE ANY
#define HPS_0_BOX_YN_FREQ 56000000
#define HPS_0_BOX_YN_HAS_IN 1
#define HPS_0_BOX_YN_HAS_OUT 0
#define HPS_0_BOX_YN_HAS_TRI 0
#define HPS_0_BOX_YN_IRQ_TYPE NONE
#define HPS_0_BOX_YN_RESET_VALUE 0

/*
 * Macros for device 'box_y0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_Y0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_Y0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_Y0_COMPONENT_NAME box_y0
#define HPS_0_BOX_Y0_BASE 0xb0
#define HPS_0_BOX_Y0_SPAN 32
#define HPS_0_BOX_Y0_END 0xcf
#define HPS_0_BOX_Y0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_Y0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_Y0_CAPTURE 1
#define HPS_0_BOX_Y0_DATA_WIDTH 16
#define HPS_0_BOX_Y0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_Y0_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_Y0_EDGE_TYPE ANY
#define HPS_0_BOX_Y0_FREQ 56000000
#define HPS_0_BOX_Y0_HAS_IN 1
#define HPS_0_BOX_Y0_HAS_OUT 0
#define HPS_0_BOX_Y0_HAS_TRI 0
#define HPS_0_BOX_Y0_IRQ_TYPE NONE
#define HPS_0_BOX_Y0_RESET_VALUE 0

/*
 * Macros for device 'test_16t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEST_16T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEST_16T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEST_16T_0_COMPONENT_NAME test_16t_0
#define HPS_0_TEST_16T_0_BASE 0xc0
#define HPS_0_TEST_16T_0_SPAN 32
#define HPS_0_TEST_16T_0_END 0xdf
#define HPS_0_TEST_16T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEST_16T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEST_16T_0_CAPTURE 0
#define HPS_0_TEST_16T_0_DATA_WIDTH 16
#define HPS_0_TEST_16T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEST_16T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TEST_16T_0_EDGE_TYPE NONE
#define HPS_0_TEST_16T_0_FREQ 56000000
#define HPS_0_TEST_16T_0_HAS_IN 0
#define HPS_0_TEST_16T_0_HAS_OUT 1
#define HPS_0_TEST_16T_0_HAS_TRI 0
#define HPS_0_TEST_16T_0_IRQ_TYPE NONE
#define HPS_0_TEST_16T_0_RESET_VALUE 0

/*
 * Macros for device 'test_32t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEST_32T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEST_32T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEST_32T_0_COMPONENT_NAME test_32t_0
#define HPS_0_TEST_32T_0_BASE 0xd0
#define HPS_0_TEST_32T_0_SPAN 32
#define HPS_0_TEST_32T_0_END 0xef
#define HPS_0_TEST_32T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEST_32T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEST_32T_0_CAPTURE 0
#define HPS_0_TEST_32T_0_DATA_WIDTH 32
#define HPS_0_TEST_32T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEST_32T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_TEST_32T_0_EDGE_TYPE NONE
#define HPS_0_TEST_32T_0_FREQ 56000000
#define HPS_0_TEST_32T_0_HAS_IN 0
#define HPS_0_TEST_32T_0_HAS_OUT 1
#define HPS_0_TEST_32T_0_HAS_TRI 0
#define HPS_0_TEST_32T_0_IRQ_TYPE NONE
#define HPS_0_TEST_32T_0_RESET_VALUE 0

/*
 * Macros for device 'n_fish', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_N_FISH_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_N_FISH_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_N_FISH_COMPONENT_NAME n_fish
#define HPS_0_N_FISH_BASE 0xe0
#define HPS_0_N_FISH_SPAN 32
#define HPS_0_N_FISH_END 0xff
#define HPS_0_N_FISH_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_N_FISH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_N_FISH_CAPTURE 0
#define HPS_0_N_FISH_DATA_WIDTH 16
#define HPS_0_N_FISH_DO_TEST_BENCH_WIRING 0
#define HPS_0_N_FISH_DRIVEN_SIM_VALUE 0
#define HPS_0_N_FISH_EDGE_TYPE NONE
#define HPS_0_N_FISH_FREQ 56000000
#define HPS_0_N_FISH_HAS_IN 0
#define HPS_0_N_FISH_HAS_OUT 1
#define HPS_0_N_FISH_HAS_TRI 0
#define HPS_0_N_FISH_IRQ_TYPE NONE
#define HPS_0_N_FISH_RESET_VALUE 0

/*
 * Macros for device 'box_xn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_XN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_XN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_XN_COMPONENT_NAME box_xn
#define HPS_0_BOX_XN_BASE 0xf0
#define HPS_0_BOX_XN_SPAN 32
#define HPS_0_BOX_XN_END 0x10f
#define HPS_0_BOX_XN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_XN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_XN_CAPTURE 1
#define HPS_0_BOX_XN_DATA_WIDTH 16
#define HPS_0_BOX_XN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_XN_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_XN_EDGE_TYPE ANY
#define HPS_0_BOX_XN_FREQ 56000000
#define HPS_0_BOX_XN_HAS_IN 1
#define HPS_0_BOX_XN_HAS_OUT 0
#define HPS_0_BOX_XN_HAS_TRI 0
#define HPS_0_BOX_XN_IRQ_TYPE NONE
#define HPS_0_BOX_XN_RESET_VALUE 0

/*
 * Macros for device 'box_x0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BOX_X0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BOX_X0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BOX_X0_COMPONENT_NAME box_x0
#define HPS_0_BOX_X0_BASE 0x100
#define HPS_0_BOX_X0_SPAN 32
#define HPS_0_BOX_X0_END 0x11f
#define HPS_0_BOX_X0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BOX_X0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BOX_X0_CAPTURE 1
#define HPS_0_BOX_X0_DATA_WIDTH 16
#define HPS_0_BOX_X0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BOX_X0_DRIVEN_SIM_VALUE 0
#define HPS_0_BOX_X0_EDGE_TYPE ANY
#define HPS_0_BOX_X0_FREQ 56000000
#define HPS_0_BOX_X0_HAS_IN 1
#define HPS_0_BOX_X0_HAS_OUT 0
#define HPS_0_BOX_X0_HAS_TRI 0
#define HPS_0_BOX_X0_IRQ_TYPE NONE
#define HPS_0_BOX_X0_RESET_VALUE 0

/*
 * Macros for device 'reset_cnt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_RESET_CNT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_RESET_CNT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_RESET_CNT_COMPONENT_NAME reset_cnt
#define HPS_0_RESET_CNT_BASE 0x200
#define HPS_0_RESET_CNT_SPAN 32
#define HPS_0_RESET_CNT_END 0x21f
#define HPS_0_RESET_CNT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_RESET_CNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_RESET_CNT_CAPTURE 0
#define HPS_0_RESET_CNT_DATA_WIDTH 1
#define HPS_0_RESET_CNT_DO_TEST_BENCH_WIRING 0
#define HPS_0_RESET_CNT_DRIVEN_SIM_VALUE 0
#define HPS_0_RESET_CNT_EDGE_TYPE NONE
#define HPS_0_RESET_CNT_FREQ 56000000
#define HPS_0_RESET_CNT_HAS_IN 1
#define HPS_0_RESET_CNT_HAS_OUT 0
#define HPS_0_RESET_CNT_HAS_TRI 0
#define HPS_0_RESET_CNT_IRQ_TYPE NONE
#define HPS_0_RESET_CNT_RESET_VALUE 0

/*
 * Macros for device 'sw_mass', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SW_MASS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SW_MASS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_SW_MASS_COMPONENT_NAME sw_mass
#define HPS_0_SW_MASS_BASE 0x210
#define HPS_0_SW_MASS_SPAN 32
#define HPS_0_SW_MASS_END 0x22f
#define HPS_0_SW_MASS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_SW_MASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_SW_MASS_CAPTURE 0
#define HPS_0_SW_MASS_DATA_WIDTH 2
#define HPS_0_SW_MASS_DO_TEST_BENCH_WIRING 0
#define HPS_0_SW_MASS_DRIVEN_SIM_VALUE 0
#define HPS_0_SW_MASS_EDGE_TYPE NONE
#define HPS_0_SW_MASS_FREQ 56000000
#define HPS_0_SW_MASS_HAS_IN 1
#define HPS_0_SW_MASS_HAS_OUT 0
#define HPS_0_SW_MASS_HAS_TRI 0
#define HPS_0_SW_MASS_IRQ_TYPE NONE
#define HPS_0_SW_MASS_RESET_VALUE 0

/*
 * Macros for device 'test_cnt_balls', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEST_CNT_BALLS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEST_CNT_BALLS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEST_CNT_BALLS_COMPONENT_NAME test_cnt_balls
#define HPS_0_TEST_CNT_BALLS_BASE 0x220
#define HPS_0_TEST_CNT_BALLS_SPAN 32
#define HPS_0_TEST_CNT_BALLS_END 0x23f
#define HPS_0_TEST_CNT_BALLS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEST_CNT_BALLS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEST_CNT_BALLS_CAPTURE 0
#define HPS_0_TEST_CNT_BALLS_DATA_WIDTH 1
#define HPS_0_TEST_CNT_BALLS_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEST_CNT_BALLS_DRIVEN_SIM_VALUE 0
#define HPS_0_TEST_CNT_BALLS_EDGE_TYPE NONE
#define HPS_0_TEST_CNT_BALLS_FREQ 56000000
#define HPS_0_TEST_CNT_BALLS_HAS_IN 1
#define HPS_0_TEST_CNT_BALLS_HAS_OUT 0
#define HPS_0_TEST_CNT_BALLS_HAS_TRI 0
#define HPS_0_TEST_CNT_BALLS_IRQ_TYPE NONE
#define HPS_0_TEST_CNT_BALLS_RESET_VALUE 0

/*
 * Macros for device 'con_yark', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CON_YARK_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CON_YARK_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_CON_YARK_COMPONENT_NAME con_yark
#define HPS_0_CON_YARK_BASE 0x230
#define HPS_0_CON_YARK_SPAN 32
#define HPS_0_CON_YARK_END 0x24f
#define HPS_0_CON_YARK_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_CON_YARK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_CON_YARK_CAPTURE 0
#define HPS_0_CON_YARK_DATA_WIDTH 8
#define HPS_0_CON_YARK_DO_TEST_BENCH_WIRING 0
#define HPS_0_CON_YARK_DRIVEN_SIM_VALUE 0
#define HPS_0_CON_YARK_EDGE_TYPE NONE
#define HPS_0_CON_YARK_FREQ 56000000
#define HPS_0_CON_YARK_HAS_IN 0
#define HPS_0_CON_YARK_HAS_OUT 1
#define HPS_0_CON_YARK_HAS_TRI 0
#define HPS_0_CON_YARK_IRQ_TYPE NONE
#define HPS_0_CON_YARK_RESET_VALUE 0

/*
 * Macros for device 'x1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_X1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_X1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_X1_0_COMPONENT_NAME x1_0
#define HPS_0_X1_0_BASE 0x240
#define HPS_0_X1_0_SPAN 32
#define HPS_0_X1_0_END 0x25f
#define HPS_0_X1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_X1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_X1_0_CAPTURE 0
#define HPS_0_X1_0_DATA_WIDTH 10
#define HPS_0_X1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_X1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_X1_0_EDGE_TYPE NONE
#define HPS_0_X1_0_FREQ 56000000
#define HPS_0_X1_0_HAS_IN 0
#define HPS_0_X1_0_HAS_OUT 1
#define HPS_0_X1_0_HAS_TRI 0
#define HPS_0_X1_0_IRQ_TYPE NONE
#define HPS_0_X1_0_RESET_VALUE 0

/*
 * Macros for device 'x2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_X2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_X2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_X2_0_COMPONENT_NAME x2_0
#define HPS_0_X2_0_BASE 0x250
#define HPS_0_X2_0_SPAN 32
#define HPS_0_X2_0_END 0x26f
#define HPS_0_X2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_X2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_X2_0_CAPTURE 0
#define HPS_0_X2_0_DATA_WIDTH 10
#define HPS_0_X2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_X2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_X2_0_EDGE_TYPE NONE
#define HPS_0_X2_0_FREQ 56000000
#define HPS_0_X2_0_HAS_IN 0
#define HPS_0_X2_0_HAS_OUT 1
#define HPS_0_X2_0_HAS_TRI 0
#define HPS_0_X2_0_IRQ_TYPE NONE
#define HPS_0_X2_0_RESET_VALUE 0

/*
 * Macros for device 'y1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_Y1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_Y1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_Y1_0_COMPONENT_NAME y1_0
#define HPS_0_Y1_0_BASE 0x260
#define HPS_0_Y1_0_SPAN 32
#define HPS_0_Y1_0_END 0x27f
#define HPS_0_Y1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_Y1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_Y1_0_CAPTURE 0
#define HPS_0_Y1_0_DATA_WIDTH 10
#define HPS_0_Y1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_Y1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_Y1_0_EDGE_TYPE NONE
#define HPS_0_Y1_0_FREQ 56000000
#define HPS_0_Y1_0_HAS_IN 0
#define HPS_0_Y1_0_HAS_OUT 1
#define HPS_0_Y1_0_HAS_TRI 0
#define HPS_0_Y1_0_IRQ_TYPE NONE
#define HPS_0_Y1_0_RESET_VALUE 0

/*
 * Macros for device 'y2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_Y2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_Y2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_Y2_0_COMPONENT_NAME y2_0
#define HPS_0_Y2_0_BASE 0x270
#define HPS_0_Y2_0_SPAN 32
#define HPS_0_Y2_0_END 0x28f
#define HPS_0_Y2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_Y2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_Y2_0_CAPTURE 0
#define HPS_0_Y2_0_DATA_WIDTH 10
#define HPS_0_Y2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_Y2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_Y2_0_EDGE_TYPE NONE
#define HPS_0_Y2_0_FREQ 56000000
#define HPS_0_Y2_0_HAS_IN 0
#define HPS_0_Y2_0_HAS_OUT 1
#define HPS_0_Y2_0_HAS_TRI 0
#define HPS_0_Y2_0_IRQ_TYPE NONE
#define HPS_0_Y2_0_RESET_VALUE 0

/*
 * Macros for device 'del_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_DEL_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_DEL_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_DEL_X_COMPONENT_NAME del_x
#define HPS_0_DEL_X_BASE 0x280
#define HPS_0_DEL_X_SPAN 32
#define HPS_0_DEL_X_END 0x29f
#define HPS_0_DEL_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_DEL_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_DEL_X_CAPTURE 0
#define HPS_0_DEL_X_DATA_WIDTH 10
#define HPS_0_DEL_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_DEL_X_DRIVEN_SIM_VALUE 0
#define HPS_0_DEL_X_EDGE_TYPE NONE
#define HPS_0_DEL_X_FREQ 56000000
#define HPS_0_DEL_X_HAS_IN 0
#define HPS_0_DEL_X_HAS_OUT 1
#define HPS_0_DEL_X_HAS_TRI 0
#define HPS_0_DEL_X_IRQ_TYPE NONE
#define HPS_0_DEL_X_RESET_VALUE 0

/*
 * Macros for device 'del_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_DEL_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_DEL_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_DEL_Y_COMPONENT_NAME del_y
#define HPS_0_DEL_Y_BASE 0x290
#define HPS_0_DEL_Y_SPAN 32
#define HPS_0_DEL_Y_END 0x2af
#define HPS_0_DEL_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_DEL_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_DEL_Y_CAPTURE 0
#define HPS_0_DEL_Y_DATA_WIDTH 10
#define HPS_0_DEL_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_DEL_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_DEL_Y_EDGE_TYPE NONE
#define HPS_0_DEL_Y_FREQ 56000000
#define HPS_0_DEL_Y_HAS_IN 0
#define HPS_0_DEL_Y_HAS_OUT 1
#define HPS_0_DEL_Y_HAS_TRI 0
#define HPS_0_DEL_Y_IRQ_TYPE NONE
#define HPS_0_DEL_Y_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_SYSID_QSYS_BASE 0x10000
#define HPS_0_SYSID_QSYS_SPAN 8
#define HPS_0_SYSID_QSYS_END 0x10007
#define HPS_0_SYSID_QSYS_ID 2899645186
#define HPS_0_SYSID_QSYS_TIMESTAMP 1432624708

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_JTAG_UART_BASE 0x20000
#define HPS_0_JTAG_UART_SPAN 16
#define HPS_0_JTAG_UART_END 0x2000f
#define HPS_0_JTAG_UART_IRQ 2
#define HPS_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_BRIDGES_PIO_LED_BASE 0x0
#define HPS_0_BRIDGES_PIO_LED_SPAN 32
#define HPS_0_BRIDGES_PIO_LED_END 0x1f
#define HPS_0_BRIDGES_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PIO_LED_CAPTURE 0
#define HPS_0_BRIDGES_PIO_LED_DATA_WIDTH 10
#define HPS_0_BRIDGES_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PIO_LED_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PIO_LED_FREQ 56000000
#define HPS_0_BRIDGES_PIO_LED_HAS_IN 0
#define HPS_0_BRIDGES_PIO_LED_HAS_OUT 1
#define HPS_0_BRIDGES_PIO_LED_HAS_TRI 0
#define HPS_0_BRIDGES_PIO_LED_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PIO_LED_RESET_VALUE 0

/*
 * Macros for device 'n_frame', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_N_FRAME_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_N_FRAME_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_N_FRAME_COMPONENT_NAME n_frame
#define HPS_0_BRIDGES_N_FRAME_BASE 0x10
#define HPS_0_BRIDGES_N_FRAME_SPAN 32
#define HPS_0_BRIDGES_N_FRAME_END 0x2f
#define HPS_0_BRIDGES_N_FRAME_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_N_FRAME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_N_FRAME_CAPTURE 0
#define HPS_0_BRIDGES_N_FRAME_DATA_WIDTH 32
#define HPS_0_BRIDGES_N_FRAME_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_N_FRAME_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_N_FRAME_EDGE_TYPE NONE
#define HPS_0_BRIDGES_N_FRAME_FREQ 56000000
#define HPS_0_BRIDGES_N_FRAME_HAS_IN 1
#define HPS_0_BRIDGES_N_FRAME_HAS_OUT 0
#define HPS_0_BRIDGES_N_FRAME_HAS_TRI 0
#define HPS_0_BRIDGES_N_FRAME_IRQ_TYPE NONE
#define HPS_0_BRIDGES_N_FRAME_RESET_VALUE 0

/*
 * Macros for device 'x_max', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_X_MAX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_X_MAX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_X_MAX_COMPONENT_NAME x_max
#define HPS_0_BRIDGES_X_MAX_BASE 0x20
#define HPS_0_BRIDGES_X_MAX_SPAN 32
#define HPS_0_BRIDGES_X_MAX_END 0x3f
#define HPS_0_BRIDGES_X_MAX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_X_MAX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_X_MAX_CAPTURE 0
#define HPS_0_BRIDGES_X_MAX_DATA_WIDTH 16
#define HPS_0_BRIDGES_X_MAX_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_X_MAX_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_X_MAX_EDGE_TYPE NONE
#define HPS_0_BRIDGES_X_MAX_FREQ 56000000
#define HPS_0_BRIDGES_X_MAX_HAS_IN 1
#define HPS_0_BRIDGES_X_MAX_HAS_OUT 0
#define HPS_0_BRIDGES_X_MAX_HAS_TRI 0
#define HPS_0_BRIDGES_X_MAX_IRQ_TYPE NONE
#define HPS_0_BRIDGES_X_MAX_RESET_VALUE 0

/*
 * Macros for device 'x_min', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_X_MIN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_X_MIN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_X_MIN_COMPONENT_NAME x_min
#define HPS_0_BRIDGES_X_MIN_BASE 0x30
#define HPS_0_BRIDGES_X_MIN_SPAN 32
#define HPS_0_BRIDGES_X_MIN_END 0x4f
#define HPS_0_BRIDGES_X_MIN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_X_MIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_X_MIN_CAPTURE 0
#define HPS_0_BRIDGES_X_MIN_DATA_WIDTH 16
#define HPS_0_BRIDGES_X_MIN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_X_MIN_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_X_MIN_EDGE_TYPE NONE
#define HPS_0_BRIDGES_X_MIN_FREQ 56000000
#define HPS_0_BRIDGES_X_MIN_HAS_IN 1
#define HPS_0_BRIDGES_X_MIN_HAS_OUT 0
#define HPS_0_BRIDGES_X_MIN_HAS_TRI 0
#define HPS_0_BRIDGES_X_MIN_IRQ_TYPE NONE
#define HPS_0_BRIDGES_X_MIN_RESET_VALUE 0

/*
 * Macros for device 'req_res', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_REQ_RES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_REQ_RES_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_REQ_RES_COMPONENT_NAME req_res
#define HPS_0_BRIDGES_REQ_RES_BASE 0x40
#define HPS_0_BRIDGES_REQ_RES_SPAN 32
#define HPS_0_BRIDGES_REQ_RES_END 0x5f
#define HPS_0_BRIDGES_REQ_RES_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_REQ_RES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_REQ_RES_CAPTURE 0
#define HPS_0_BRIDGES_REQ_RES_DATA_WIDTH 1
#define HPS_0_BRIDGES_REQ_RES_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_REQ_RES_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_REQ_RES_EDGE_TYPE NONE
#define HPS_0_BRIDGES_REQ_RES_FREQ 56000000
#define HPS_0_BRIDGES_REQ_RES_HAS_IN 0
#define HPS_0_BRIDGES_REQ_RES_HAS_OUT 1
#define HPS_0_BRIDGES_REQ_RES_HAS_TRI 0
#define HPS_0_BRIDGES_REQ_RES_IRQ_TYPE NONE
#define HPS_0_BRIDGES_REQ_RES_RESET_VALUE 0

/*
 * Macros for device 'addr_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ADDR_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ADDR_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_ADDR_OUT_COMPONENT_NAME addr_out
#define HPS_0_BRIDGES_ADDR_OUT_BASE 0x50
#define HPS_0_BRIDGES_ADDR_OUT_SPAN 32
#define HPS_0_BRIDGES_ADDR_OUT_END 0x6f
#define HPS_0_BRIDGES_ADDR_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_ADDR_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_ADDR_OUT_CAPTURE 0
#define HPS_0_BRIDGES_ADDR_OUT_DATA_WIDTH 8
#define HPS_0_BRIDGES_ADDR_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_ADDR_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_ADDR_OUT_EDGE_TYPE NONE
#define HPS_0_BRIDGES_ADDR_OUT_FREQ 56000000
#define HPS_0_BRIDGES_ADDR_OUT_HAS_IN 0
#define HPS_0_BRIDGES_ADDR_OUT_HAS_OUT 1
#define HPS_0_BRIDGES_ADDR_OUT_HAS_TRI 0
#define HPS_0_BRIDGES_ADDR_OUT_IRQ_TYPE NONE
#define HPS_0_BRIDGES_ADDR_OUT_RESET_VALUE 0

/*
 * Macros for device 'box_addr', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_ADDR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_ADDR_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_ADDR_COMPONENT_NAME box_addr
#define HPS_0_BRIDGES_BOX_ADDR_BASE 0x60
#define HPS_0_BRIDGES_BOX_ADDR_SPAN 32
#define HPS_0_BRIDGES_BOX_ADDR_END 0x7f
#define HPS_0_BRIDGES_BOX_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_ADDR_CAPTURE 0
#define HPS_0_BRIDGES_BOX_ADDR_DATA_WIDTH 8
#define HPS_0_BRIDGES_BOX_ADDR_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_ADDR_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_ADDR_EDGE_TYPE NONE
#define HPS_0_BRIDGES_BOX_ADDR_FREQ 56000000
#define HPS_0_BRIDGES_BOX_ADDR_HAS_IN 1
#define HPS_0_BRIDGES_BOX_ADDR_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_ADDR_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_ADDR_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_ADDR_RESET_VALUE 0

/*
 * Macros for device 'box_n', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_N_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_N_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_N_COMPONENT_NAME box_n
#define HPS_0_BRIDGES_BOX_N_BASE 0x70
#define HPS_0_BRIDGES_BOX_N_SPAN 32
#define HPS_0_BRIDGES_BOX_N_END 0x8f
#define HPS_0_BRIDGES_BOX_N_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_N_CAPTURE 0
#define HPS_0_BRIDGES_BOX_N_DATA_WIDTH 8
#define HPS_0_BRIDGES_BOX_N_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_N_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_N_EDGE_TYPE NONE
#define HPS_0_BRIDGES_BOX_N_FREQ 56000000
#define HPS_0_BRIDGES_BOX_N_HAS_IN 1
#define HPS_0_BRIDGES_BOX_N_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_N_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_N_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_N_RESET_VALUE 0

/*
 * Macros for device 'box_req', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_REQ_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_REQ_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_REQ_COMPONENT_NAME box_req
#define HPS_0_BRIDGES_BOX_REQ_BASE 0x80
#define HPS_0_BRIDGES_BOX_REQ_SPAN 32
#define HPS_0_BRIDGES_BOX_REQ_END 0x9f
#define HPS_0_BRIDGES_BOX_REQ_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_REQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_REQ_CAPTURE 1
#define HPS_0_BRIDGES_BOX_REQ_DATA_WIDTH 1
#define HPS_0_BRIDGES_BOX_REQ_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_REQ_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_REQ_EDGE_TYPE RISING
#define HPS_0_BRIDGES_BOX_REQ_FREQ 56000000
#define HPS_0_BRIDGES_BOX_REQ_HAS_IN 1
#define HPS_0_BRIDGES_BOX_REQ_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_REQ_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_REQ_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_REQ_RESET_VALUE 0

/*
 * Macros for device 'n_pix', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_N_PIX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_N_PIX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_N_PIX_COMPONENT_NAME n_pix
#define HPS_0_BRIDGES_N_PIX_BASE 0x90
#define HPS_0_BRIDGES_N_PIX_SPAN 32
#define HPS_0_BRIDGES_N_PIX_END 0xaf
#define HPS_0_BRIDGES_N_PIX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_N_PIX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_N_PIX_CAPTURE 1
#define HPS_0_BRIDGES_N_PIX_DATA_WIDTH 32
#define HPS_0_BRIDGES_N_PIX_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_N_PIX_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_N_PIX_EDGE_TYPE ANY
#define HPS_0_BRIDGES_N_PIX_FREQ 56000000
#define HPS_0_BRIDGES_N_PIX_HAS_IN 1
#define HPS_0_BRIDGES_N_PIX_HAS_OUT 0
#define HPS_0_BRIDGES_N_PIX_HAS_TRI 0
#define HPS_0_BRIDGES_N_PIX_IRQ_TYPE NONE
#define HPS_0_BRIDGES_N_PIX_RESET_VALUE 0

/*
 * Macros for device 'box_yn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_YN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_YN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_YN_COMPONENT_NAME box_yn
#define HPS_0_BRIDGES_BOX_YN_BASE 0xa0
#define HPS_0_BRIDGES_BOX_YN_SPAN 32
#define HPS_0_BRIDGES_BOX_YN_END 0xbf
#define HPS_0_BRIDGES_BOX_YN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_YN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_YN_CAPTURE 1
#define HPS_0_BRIDGES_BOX_YN_DATA_WIDTH 16
#define HPS_0_BRIDGES_BOX_YN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_YN_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_YN_EDGE_TYPE ANY
#define HPS_0_BRIDGES_BOX_YN_FREQ 56000000
#define HPS_0_BRIDGES_BOX_YN_HAS_IN 1
#define HPS_0_BRIDGES_BOX_YN_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_YN_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_YN_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_YN_RESET_VALUE 0

/*
 * Macros for device 'box_y0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_Y0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_Y0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_Y0_COMPONENT_NAME box_y0
#define HPS_0_BRIDGES_BOX_Y0_BASE 0xb0
#define HPS_0_BRIDGES_BOX_Y0_SPAN 32
#define HPS_0_BRIDGES_BOX_Y0_END 0xcf
#define HPS_0_BRIDGES_BOX_Y0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_Y0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_Y0_CAPTURE 1
#define HPS_0_BRIDGES_BOX_Y0_DATA_WIDTH 16
#define HPS_0_BRIDGES_BOX_Y0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_Y0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_Y0_EDGE_TYPE ANY
#define HPS_0_BRIDGES_BOX_Y0_FREQ 56000000
#define HPS_0_BRIDGES_BOX_Y0_HAS_IN 1
#define HPS_0_BRIDGES_BOX_Y0_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_Y0_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_Y0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_Y0_RESET_VALUE 0

/*
 * Macros for device 'test_16t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEST_16T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEST_16T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEST_16T_0_COMPONENT_NAME test_16t_0
#define HPS_0_BRIDGES_TEST_16T_0_BASE 0xc0
#define HPS_0_BRIDGES_TEST_16T_0_SPAN 32
#define HPS_0_BRIDGES_TEST_16T_0_END 0xdf
#define HPS_0_BRIDGES_TEST_16T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEST_16T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEST_16T_0_CAPTURE 0
#define HPS_0_BRIDGES_TEST_16T_0_DATA_WIDTH 16
#define HPS_0_BRIDGES_TEST_16T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEST_16T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEST_16T_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEST_16T_0_FREQ 56000000
#define HPS_0_BRIDGES_TEST_16T_0_HAS_IN 0
#define HPS_0_BRIDGES_TEST_16T_0_HAS_OUT 1
#define HPS_0_BRIDGES_TEST_16T_0_HAS_TRI 0
#define HPS_0_BRIDGES_TEST_16T_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEST_16T_0_RESET_VALUE 0

/*
 * Macros for device 'test_32t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEST_32T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEST_32T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEST_32T_0_COMPONENT_NAME test_32t_0
#define HPS_0_BRIDGES_TEST_32T_0_BASE 0xd0
#define HPS_0_BRIDGES_TEST_32T_0_SPAN 32
#define HPS_0_BRIDGES_TEST_32T_0_END 0xef
#define HPS_0_BRIDGES_TEST_32T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEST_32T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEST_32T_0_CAPTURE 0
#define HPS_0_BRIDGES_TEST_32T_0_DATA_WIDTH 32
#define HPS_0_BRIDGES_TEST_32T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEST_32T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEST_32T_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEST_32T_0_FREQ 56000000
#define HPS_0_BRIDGES_TEST_32T_0_HAS_IN 0
#define HPS_0_BRIDGES_TEST_32T_0_HAS_OUT 1
#define HPS_0_BRIDGES_TEST_32T_0_HAS_TRI 0
#define HPS_0_BRIDGES_TEST_32T_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEST_32T_0_RESET_VALUE 0

/*
 * Macros for device 'n_fish', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_N_FISH_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_N_FISH_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_N_FISH_COMPONENT_NAME n_fish
#define HPS_0_BRIDGES_N_FISH_BASE 0xe0
#define HPS_0_BRIDGES_N_FISH_SPAN 32
#define HPS_0_BRIDGES_N_FISH_END 0xff
#define HPS_0_BRIDGES_N_FISH_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_N_FISH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_N_FISH_CAPTURE 0
#define HPS_0_BRIDGES_N_FISH_DATA_WIDTH 16
#define HPS_0_BRIDGES_N_FISH_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_N_FISH_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_N_FISH_EDGE_TYPE NONE
#define HPS_0_BRIDGES_N_FISH_FREQ 56000000
#define HPS_0_BRIDGES_N_FISH_HAS_IN 0
#define HPS_0_BRIDGES_N_FISH_HAS_OUT 1
#define HPS_0_BRIDGES_N_FISH_HAS_TRI 0
#define HPS_0_BRIDGES_N_FISH_IRQ_TYPE NONE
#define HPS_0_BRIDGES_N_FISH_RESET_VALUE 0

/*
 * Macros for device 'box_xn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_XN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_XN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_XN_COMPONENT_NAME box_xn
#define HPS_0_BRIDGES_BOX_XN_BASE 0xf0
#define HPS_0_BRIDGES_BOX_XN_SPAN 32
#define HPS_0_BRIDGES_BOX_XN_END 0x10f
#define HPS_0_BRIDGES_BOX_XN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_XN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_XN_CAPTURE 1
#define HPS_0_BRIDGES_BOX_XN_DATA_WIDTH 16
#define HPS_0_BRIDGES_BOX_XN_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_XN_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_XN_EDGE_TYPE ANY
#define HPS_0_BRIDGES_BOX_XN_FREQ 56000000
#define HPS_0_BRIDGES_BOX_XN_HAS_IN 1
#define HPS_0_BRIDGES_BOX_XN_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_XN_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_XN_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_XN_RESET_VALUE 0

/*
 * Macros for device 'box_x0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BOX_X0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BOX_X0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BOX_X0_COMPONENT_NAME box_x0
#define HPS_0_BRIDGES_BOX_X0_BASE 0x100
#define HPS_0_BRIDGES_BOX_X0_SPAN 32
#define HPS_0_BRIDGES_BOX_X0_END 0x11f
#define HPS_0_BRIDGES_BOX_X0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_BOX_X0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BOX_X0_CAPTURE 1
#define HPS_0_BRIDGES_BOX_X0_DATA_WIDTH 16
#define HPS_0_BRIDGES_BOX_X0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BOX_X0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BOX_X0_EDGE_TYPE ANY
#define HPS_0_BRIDGES_BOX_X0_FREQ 56000000
#define HPS_0_BRIDGES_BOX_X0_HAS_IN 1
#define HPS_0_BRIDGES_BOX_X0_HAS_OUT 0
#define HPS_0_BRIDGES_BOX_X0_HAS_TRI 0
#define HPS_0_BRIDGES_BOX_X0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_BOX_X0_RESET_VALUE 0

/*
 * Macros for device 'reset_cnt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_RESET_CNT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_RESET_CNT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_RESET_CNT_COMPONENT_NAME reset_cnt
#define HPS_0_BRIDGES_RESET_CNT_BASE 0x200
#define HPS_0_BRIDGES_RESET_CNT_SPAN 32
#define HPS_0_BRIDGES_RESET_CNT_END 0x21f
#define HPS_0_BRIDGES_RESET_CNT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_RESET_CNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_RESET_CNT_CAPTURE 0
#define HPS_0_BRIDGES_RESET_CNT_DATA_WIDTH 1
#define HPS_0_BRIDGES_RESET_CNT_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_RESET_CNT_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_RESET_CNT_EDGE_TYPE NONE
#define HPS_0_BRIDGES_RESET_CNT_FREQ 56000000
#define HPS_0_BRIDGES_RESET_CNT_HAS_IN 1
#define HPS_0_BRIDGES_RESET_CNT_HAS_OUT 0
#define HPS_0_BRIDGES_RESET_CNT_HAS_TRI 0
#define HPS_0_BRIDGES_RESET_CNT_IRQ_TYPE NONE
#define HPS_0_BRIDGES_RESET_CNT_RESET_VALUE 0

/*
 * Macros for device 'sw_mass', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SW_MASS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SW_MASS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_SW_MASS_COMPONENT_NAME sw_mass
#define HPS_0_BRIDGES_SW_MASS_BASE 0x210
#define HPS_0_BRIDGES_SW_MASS_SPAN 32
#define HPS_0_BRIDGES_SW_MASS_END 0x22f
#define HPS_0_BRIDGES_SW_MASS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_SW_MASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_SW_MASS_CAPTURE 0
#define HPS_0_BRIDGES_SW_MASS_DATA_WIDTH 2
#define HPS_0_BRIDGES_SW_MASS_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_SW_MASS_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_SW_MASS_EDGE_TYPE NONE
#define HPS_0_BRIDGES_SW_MASS_FREQ 56000000
#define HPS_0_BRIDGES_SW_MASS_HAS_IN 1
#define HPS_0_BRIDGES_SW_MASS_HAS_OUT 0
#define HPS_0_BRIDGES_SW_MASS_HAS_TRI 0
#define HPS_0_BRIDGES_SW_MASS_IRQ_TYPE NONE
#define HPS_0_BRIDGES_SW_MASS_RESET_VALUE 0

/*
 * Macros for device 'test_cnt_balls', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEST_CNT_BALLS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEST_CNT_BALLS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEST_CNT_BALLS_COMPONENT_NAME test_cnt_balls
#define HPS_0_BRIDGES_TEST_CNT_BALLS_BASE 0x220
#define HPS_0_BRIDGES_TEST_CNT_BALLS_SPAN 32
#define HPS_0_BRIDGES_TEST_CNT_BALLS_END 0x23f
#define HPS_0_BRIDGES_TEST_CNT_BALLS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_CAPTURE 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_DATA_WIDTH 1
#define HPS_0_BRIDGES_TEST_CNT_BALLS_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEST_CNT_BALLS_FREQ 56000000
#define HPS_0_BRIDGES_TEST_CNT_BALLS_HAS_IN 1
#define HPS_0_BRIDGES_TEST_CNT_BALLS_HAS_OUT 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_HAS_TRI 0
#define HPS_0_BRIDGES_TEST_CNT_BALLS_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEST_CNT_BALLS_RESET_VALUE 0

/*
 * Macros for device 'con_yark', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CON_YARK_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CON_YARK_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_CON_YARK_COMPONENT_NAME con_yark
#define HPS_0_BRIDGES_CON_YARK_BASE 0x230
#define HPS_0_BRIDGES_CON_YARK_SPAN 32
#define HPS_0_BRIDGES_CON_YARK_END 0x24f
#define HPS_0_BRIDGES_CON_YARK_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_CON_YARK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_CON_YARK_CAPTURE 0
#define HPS_0_BRIDGES_CON_YARK_DATA_WIDTH 8
#define HPS_0_BRIDGES_CON_YARK_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_CON_YARK_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_CON_YARK_EDGE_TYPE NONE
#define HPS_0_BRIDGES_CON_YARK_FREQ 56000000
#define HPS_0_BRIDGES_CON_YARK_HAS_IN 0
#define HPS_0_BRIDGES_CON_YARK_HAS_OUT 1
#define HPS_0_BRIDGES_CON_YARK_HAS_TRI 0
#define HPS_0_BRIDGES_CON_YARK_IRQ_TYPE NONE
#define HPS_0_BRIDGES_CON_YARK_RESET_VALUE 0

/*
 * Macros for device 'x1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_X1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_X1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_X1_0_COMPONENT_NAME x1_0
#define HPS_0_BRIDGES_X1_0_BASE 0x240
#define HPS_0_BRIDGES_X1_0_SPAN 32
#define HPS_0_BRIDGES_X1_0_END 0x25f
#define HPS_0_BRIDGES_X1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_X1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_X1_0_CAPTURE 0
#define HPS_0_BRIDGES_X1_0_DATA_WIDTH 10
#define HPS_0_BRIDGES_X1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_X1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_X1_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_X1_0_FREQ 56000000
#define HPS_0_BRIDGES_X1_0_HAS_IN 0
#define HPS_0_BRIDGES_X1_0_HAS_OUT 1
#define HPS_0_BRIDGES_X1_0_HAS_TRI 0
#define HPS_0_BRIDGES_X1_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_X1_0_RESET_VALUE 0

/*
 * Macros for device 'x2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_X2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_X2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_X2_0_COMPONENT_NAME x2_0
#define HPS_0_BRIDGES_X2_0_BASE 0x250
#define HPS_0_BRIDGES_X2_0_SPAN 32
#define HPS_0_BRIDGES_X2_0_END 0x26f
#define HPS_0_BRIDGES_X2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_X2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_X2_0_CAPTURE 0
#define HPS_0_BRIDGES_X2_0_DATA_WIDTH 10
#define HPS_0_BRIDGES_X2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_X2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_X2_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_X2_0_FREQ 56000000
#define HPS_0_BRIDGES_X2_0_HAS_IN 0
#define HPS_0_BRIDGES_X2_0_HAS_OUT 1
#define HPS_0_BRIDGES_X2_0_HAS_TRI 0
#define HPS_0_BRIDGES_X2_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_X2_0_RESET_VALUE 0

/*
 * Macros for device 'y1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_Y1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_Y1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_Y1_0_COMPONENT_NAME y1_0
#define HPS_0_BRIDGES_Y1_0_BASE 0x260
#define HPS_0_BRIDGES_Y1_0_SPAN 32
#define HPS_0_BRIDGES_Y1_0_END 0x27f
#define HPS_0_BRIDGES_Y1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_Y1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_Y1_0_CAPTURE 0
#define HPS_0_BRIDGES_Y1_0_DATA_WIDTH 10
#define HPS_0_BRIDGES_Y1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_Y1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_Y1_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_Y1_0_FREQ 56000000
#define HPS_0_BRIDGES_Y1_0_HAS_IN 0
#define HPS_0_BRIDGES_Y1_0_HAS_OUT 1
#define HPS_0_BRIDGES_Y1_0_HAS_TRI 0
#define HPS_0_BRIDGES_Y1_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_Y1_0_RESET_VALUE 0

/*
 * Macros for device 'y2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_Y2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_Y2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_Y2_0_COMPONENT_NAME y2_0
#define HPS_0_BRIDGES_Y2_0_BASE 0x270
#define HPS_0_BRIDGES_Y2_0_SPAN 32
#define HPS_0_BRIDGES_Y2_0_END 0x28f
#define HPS_0_BRIDGES_Y2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_Y2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_Y2_0_CAPTURE 0
#define HPS_0_BRIDGES_Y2_0_DATA_WIDTH 10
#define HPS_0_BRIDGES_Y2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_Y2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_Y2_0_EDGE_TYPE NONE
#define HPS_0_BRIDGES_Y2_0_FREQ 56000000
#define HPS_0_BRIDGES_Y2_0_HAS_IN 0
#define HPS_0_BRIDGES_Y2_0_HAS_OUT 1
#define HPS_0_BRIDGES_Y2_0_HAS_TRI 0
#define HPS_0_BRIDGES_Y2_0_IRQ_TYPE NONE
#define HPS_0_BRIDGES_Y2_0_RESET_VALUE 0

/*
 * Macros for device 'del_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_DEL_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_DEL_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_DEL_X_COMPONENT_NAME del_x
#define HPS_0_BRIDGES_DEL_X_BASE 0x280
#define HPS_0_BRIDGES_DEL_X_SPAN 32
#define HPS_0_BRIDGES_DEL_X_END 0x29f
#define HPS_0_BRIDGES_DEL_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_DEL_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_DEL_X_CAPTURE 0
#define HPS_0_BRIDGES_DEL_X_DATA_WIDTH 10
#define HPS_0_BRIDGES_DEL_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_DEL_X_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_DEL_X_EDGE_TYPE NONE
#define HPS_0_BRIDGES_DEL_X_FREQ 56000000
#define HPS_0_BRIDGES_DEL_X_HAS_IN 0
#define HPS_0_BRIDGES_DEL_X_HAS_OUT 1
#define HPS_0_BRIDGES_DEL_X_HAS_TRI 0
#define HPS_0_BRIDGES_DEL_X_IRQ_TYPE NONE
#define HPS_0_BRIDGES_DEL_X_RESET_VALUE 0

/*
 * Macros for device 'del_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_DEL_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_DEL_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_DEL_Y_COMPONENT_NAME del_y
#define HPS_0_BRIDGES_DEL_Y_BASE 0x290
#define HPS_0_BRIDGES_DEL_Y_SPAN 32
#define HPS_0_BRIDGES_DEL_Y_END 0x2af
#define HPS_0_BRIDGES_DEL_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_DEL_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_DEL_Y_CAPTURE 0
#define HPS_0_BRIDGES_DEL_Y_DATA_WIDTH 10
#define HPS_0_BRIDGES_DEL_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_DEL_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_DEL_Y_EDGE_TYPE NONE
#define HPS_0_BRIDGES_DEL_Y_FREQ 56000000
#define HPS_0_BRIDGES_DEL_Y_HAS_IN 0
#define HPS_0_BRIDGES_DEL_Y_HAS_OUT 1
#define HPS_0_BRIDGES_DEL_Y_HAS_TRI 0
#define HPS_0_BRIDGES_DEL_Y_IRQ_TYPE NONE
#define HPS_0_BRIDGES_DEL_Y_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_BASE 0x10000
#define HPS_0_BRIDGES_SYSID_QSYS_SPAN 8
#define HPS_0_BRIDGES_SYSID_QSYS_END 0x10007
#define HPS_0_BRIDGES_SYSID_QSYS_ID 2899645186
#define HPS_0_BRIDGES_SYSID_QSYS_TIMESTAMP 1432624708

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_BASE 0x20000
#define HPS_0_BRIDGES_JTAG_UART_SPAN 16
#define HPS_0_BRIDGES_JTAG_UART_END 0x2000f
#define HPS_0_BRIDGES_JTAG_UART_READ_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_BRIDGES_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'qspi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_TYPE qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_HPS_0_QSPI_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_QSPI_END 0xff705fff

/*
 * Macros for device 'hps_0_fpgamgr', class 'fpgamgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_TYPE fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_TYPE dw-gpio
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_HPS_0_GPIO0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_GPIO0_END 0xff708fff

/*
 * Macros for device 'hps_0_gpio1', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_TYPE dw-gpio
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_HPS_0_GPIO1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_GPIO1_END 0xff709fff

/*
 * Macros for device 'hps_0_gpio2', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_TYPE dw-gpio
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_HPS_0_GPIO2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_GPIO2_END 0xff70afff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_HPS_0_NAND0_SPAN 1048576
#define HPS_0_BRIDGES_HPS_0_NAND0_END 0xff9fffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_HPS_0_USB0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_USB0_END 0xffb00fff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_HPS_0_USB1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_USB1_END 0xffb40fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_HPS_0_UART0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_UART0_END 0xffc02fff

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_HPS_0_UART1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_UART1_END 0xffc03fff

/*
 * Macros for device 'hps_0_i2c0', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_TYPE designware-i2c
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_HPS_0_I2C0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_I2C0_END 0xffc04fff

/*
 * Macros for device 'hps_0_i2c1', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_TYPE designware-i2c
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_HPS_0_I2C1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_I2C1_END 0xffc05fff

/*
 * Macros for device 'hps_0_i2c2', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_TYPE designware-i2c
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_HPS_0_I2C2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_I2C2_END 0xffc06fff

/*
 * Macros for device 'hps_0_i2c3', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_TYPE designware-i2c
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_HPS_0_I2C3_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_I2C3_END 0xffc07fff

/*
 * Macros for device 'hps_0_timer0', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_HPS_0_TIMER0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_TIMER0_END 0xffc08fff

/*
 * Macros for device 'hps_0_timer1', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_HPS_0_TIMER1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_TIMER1_END 0xffc09fff

/*
 * Macros for device 'hps_0_timer2', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_HPS_0_TIMER2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_TIMER2_END 0xffd00fff

/*
 * Macros for device 'hps_0_timer3', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_HPS_0_TIMER3_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_TIMER3_END 0xffd01fff

/*
 * Macros for device 'hps_0_clkmgr', class 'clkmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_TYPE clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'rstmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_TYPE rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_HPS_0_RSTMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_RSTMGR_END 0xffd05fff

/*
 * Macros for device 'hps_0_sysmgr', class 'sysmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_TYPE sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_HPS_0_SYSMGR_SPAN 16384
#define HPS_0_BRIDGES_HPS_0_SYSMGR_END 0xffd0bfff

/*
 * Macros for device 'hps_0_dma', class 'dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_TYPE dma
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spi0', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPI0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPI0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPI0_COMPONENT_NAME hps_0_spi0
#define HPS_0_BRIDGES_HPS_0_SPI0_BASE 0xffe02000
#define HPS_0_BRIDGES_HPS_0_SPI0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SPI0_END 0xffe02fff

/*
 * Macros for device 'hps_0_spi1', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPI1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPI1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPI1_COMPONENT_NAME hps_0_spi1
#define HPS_0_BRIDGES_HPS_0_SPI1_BASE 0xffe03000
#define HPS_0_BRIDGES_HPS_0_SPI1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SPI1_END 0xffe03fff

/*
 * Macros for device 'hps_0_timer', class 'timer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_TYPE timer
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'L2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_TYPE L2
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_END 0xffffffff

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_BASE 0xc0000000
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_END 0xc000ffff
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_ARM_A9_0_PIO_LED_BASE 0xff200000
#define HPS_0_ARM_A9_0_PIO_LED_SPAN 32
#define HPS_0_ARM_A9_0_PIO_LED_END 0xff20001f
#define HPS_0_ARM_A9_0_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_LED_CAPTURE 0
#define HPS_0_ARM_A9_0_PIO_LED_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PIO_LED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_LED_FREQ 56000000
#define HPS_0_ARM_A9_0_PIO_LED_HAS_IN 0
#define HPS_0_ARM_A9_0_PIO_LED_HAS_OUT 1
#define HPS_0_ARM_A9_0_PIO_LED_HAS_TRI 0
#define HPS_0_ARM_A9_0_PIO_LED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_LED_RESET_VALUE 0

/*
 * Macros for device 'n_frame', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_N_FRAME_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_N_FRAME_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_N_FRAME_COMPONENT_NAME n_frame
#define HPS_0_ARM_A9_0_N_FRAME_BASE 0xff200010
#define HPS_0_ARM_A9_0_N_FRAME_SPAN 32
#define HPS_0_ARM_A9_0_N_FRAME_END 0xff20002f
#define HPS_0_ARM_A9_0_N_FRAME_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_N_FRAME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_N_FRAME_CAPTURE 0
#define HPS_0_ARM_A9_0_N_FRAME_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_N_FRAME_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_N_FRAME_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_N_FRAME_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_N_FRAME_FREQ 56000000
#define HPS_0_ARM_A9_0_N_FRAME_HAS_IN 1
#define HPS_0_ARM_A9_0_N_FRAME_HAS_OUT 0
#define HPS_0_ARM_A9_0_N_FRAME_HAS_TRI 0
#define HPS_0_ARM_A9_0_N_FRAME_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_N_FRAME_RESET_VALUE 0

/*
 * Macros for device 'x_max', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_X_MAX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_X_MAX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_X_MAX_COMPONENT_NAME x_max
#define HPS_0_ARM_A9_0_X_MAX_BASE 0xff200020
#define HPS_0_ARM_A9_0_X_MAX_SPAN 32
#define HPS_0_ARM_A9_0_X_MAX_END 0xff20003f
#define HPS_0_ARM_A9_0_X_MAX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_X_MAX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_X_MAX_CAPTURE 0
#define HPS_0_ARM_A9_0_X_MAX_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_X_MAX_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_X_MAX_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_X_MAX_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_X_MAX_FREQ 56000000
#define HPS_0_ARM_A9_0_X_MAX_HAS_IN 1
#define HPS_0_ARM_A9_0_X_MAX_HAS_OUT 0
#define HPS_0_ARM_A9_0_X_MAX_HAS_TRI 0
#define HPS_0_ARM_A9_0_X_MAX_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_X_MAX_RESET_VALUE 0

/*
 * Macros for device 'x_min', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_X_MIN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_X_MIN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_X_MIN_COMPONENT_NAME x_min
#define HPS_0_ARM_A9_0_X_MIN_BASE 0xff200030
#define HPS_0_ARM_A9_0_X_MIN_SPAN 32
#define HPS_0_ARM_A9_0_X_MIN_END 0xff20004f
#define HPS_0_ARM_A9_0_X_MIN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_X_MIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_X_MIN_CAPTURE 0
#define HPS_0_ARM_A9_0_X_MIN_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_X_MIN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_X_MIN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_X_MIN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_X_MIN_FREQ 56000000
#define HPS_0_ARM_A9_0_X_MIN_HAS_IN 1
#define HPS_0_ARM_A9_0_X_MIN_HAS_OUT 0
#define HPS_0_ARM_A9_0_X_MIN_HAS_TRI 0
#define HPS_0_ARM_A9_0_X_MIN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_X_MIN_RESET_VALUE 0

/*
 * Macros for device 'req_res', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_REQ_RES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_REQ_RES_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_REQ_RES_COMPONENT_NAME req_res
#define HPS_0_ARM_A9_0_REQ_RES_BASE 0xff200040
#define HPS_0_ARM_A9_0_REQ_RES_SPAN 32
#define HPS_0_ARM_A9_0_REQ_RES_END 0xff20005f
#define HPS_0_ARM_A9_0_REQ_RES_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_REQ_RES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_REQ_RES_CAPTURE 0
#define HPS_0_ARM_A9_0_REQ_RES_DATA_WIDTH 1
#define HPS_0_ARM_A9_0_REQ_RES_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_REQ_RES_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_REQ_RES_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_REQ_RES_FREQ 56000000
#define HPS_0_ARM_A9_0_REQ_RES_HAS_IN 0
#define HPS_0_ARM_A9_0_REQ_RES_HAS_OUT 1
#define HPS_0_ARM_A9_0_REQ_RES_HAS_TRI 0
#define HPS_0_ARM_A9_0_REQ_RES_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_REQ_RES_RESET_VALUE 0

/*
 * Macros for device 'addr_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ADDR_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ADDR_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_ADDR_OUT_COMPONENT_NAME addr_out
#define HPS_0_ARM_A9_0_ADDR_OUT_BASE 0xff200050
#define HPS_0_ARM_A9_0_ADDR_OUT_SPAN 32
#define HPS_0_ARM_A9_0_ADDR_OUT_END 0xff20006f
#define HPS_0_ARM_A9_0_ADDR_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_ADDR_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_ADDR_OUT_CAPTURE 0
#define HPS_0_ARM_A9_0_ADDR_OUT_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_ADDR_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_ADDR_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_ADDR_OUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_ADDR_OUT_FREQ 56000000
#define HPS_0_ARM_A9_0_ADDR_OUT_HAS_IN 0
#define HPS_0_ARM_A9_0_ADDR_OUT_HAS_OUT 1
#define HPS_0_ARM_A9_0_ADDR_OUT_HAS_TRI 0
#define HPS_0_ARM_A9_0_ADDR_OUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_ADDR_OUT_RESET_VALUE 0

/*
 * Macros for device 'box_addr', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_ADDR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_ADDR_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_ADDR_COMPONENT_NAME box_addr
#define HPS_0_ARM_A9_0_BOX_ADDR_BASE 0xff200060
#define HPS_0_ARM_A9_0_BOX_ADDR_SPAN 32
#define HPS_0_ARM_A9_0_BOX_ADDR_END 0xff20007f
#define HPS_0_ARM_A9_0_BOX_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_ADDR_CAPTURE 0
#define HPS_0_ARM_A9_0_BOX_ADDR_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_BOX_ADDR_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_ADDR_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_ADDR_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_ADDR_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_ADDR_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_ADDR_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_ADDR_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_ADDR_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_ADDR_RESET_VALUE 0

/*
 * Macros for device 'box_n', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_N_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_N_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_N_COMPONENT_NAME box_n
#define HPS_0_ARM_A9_0_BOX_N_BASE 0xff200070
#define HPS_0_ARM_A9_0_BOX_N_SPAN 32
#define HPS_0_ARM_A9_0_BOX_N_END 0xff20008f
#define HPS_0_ARM_A9_0_BOX_N_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_N_CAPTURE 0
#define HPS_0_ARM_A9_0_BOX_N_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_BOX_N_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_N_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_N_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_N_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_N_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_N_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_N_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_N_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_N_RESET_VALUE 0

/*
 * Macros for device 'box_req', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_REQ_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_REQ_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_REQ_COMPONENT_NAME box_req
#define HPS_0_ARM_A9_0_BOX_REQ_BASE 0xff200080
#define HPS_0_ARM_A9_0_BOX_REQ_SPAN 32
#define HPS_0_ARM_A9_0_BOX_REQ_END 0xff20009f
#define HPS_0_ARM_A9_0_BOX_REQ_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_REQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_REQ_CAPTURE 1
#define HPS_0_ARM_A9_0_BOX_REQ_DATA_WIDTH 1
#define HPS_0_ARM_A9_0_BOX_REQ_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_REQ_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_REQ_EDGE_TYPE RISING
#define HPS_0_ARM_A9_0_BOX_REQ_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_REQ_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_REQ_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_REQ_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_REQ_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_REQ_RESET_VALUE 0

/*
 * Macros for device 'n_pix', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_N_PIX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_N_PIX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_N_PIX_COMPONENT_NAME n_pix
#define HPS_0_ARM_A9_0_N_PIX_BASE 0xff200090
#define HPS_0_ARM_A9_0_N_PIX_SPAN 32
#define HPS_0_ARM_A9_0_N_PIX_END 0xff2000af
#define HPS_0_ARM_A9_0_N_PIX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_N_PIX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_N_PIX_CAPTURE 1
#define HPS_0_ARM_A9_0_N_PIX_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_N_PIX_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_N_PIX_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_N_PIX_EDGE_TYPE ANY
#define HPS_0_ARM_A9_0_N_PIX_FREQ 56000000
#define HPS_0_ARM_A9_0_N_PIX_HAS_IN 1
#define HPS_0_ARM_A9_0_N_PIX_HAS_OUT 0
#define HPS_0_ARM_A9_0_N_PIX_HAS_TRI 0
#define HPS_0_ARM_A9_0_N_PIX_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_N_PIX_RESET_VALUE 0

/*
 * Macros for device 'box_yn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_YN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_YN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_YN_COMPONENT_NAME box_yn
#define HPS_0_ARM_A9_0_BOX_YN_BASE 0xff2000a0
#define HPS_0_ARM_A9_0_BOX_YN_SPAN 32
#define HPS_0_ARM_A9_0_BOX_YN_END 0xff2000bf
#define HPS_0_ARM_A9_0_BOX_YN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_YN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_YN_CAPTURE 1
#define HPS_0_ARM_A9_0_BOX_YN_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_BOX_YN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_YN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_YN_EDGE_TYPE ANY
#define HPS_0_ARM_A9_0_BOX_YN_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_YN_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_YN_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_YN_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_YN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_YN_RESET_VALUE 0

/*
 * Macros for device 'box_y0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_Y0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_Y0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_Y0_COMPONENT_NAME box_y0
#define HPS_0_ARM_A9_0_BOX_Y0_BASE 0xff2000b0
#define HPS_0_ARM_A9_0_BOX_Y0_SPAN 32
#define HPS_0_ARM_A9_0_BOX_Y0_END 0xff2000cf
#define HPS_0_ARM_A9_0_BOX_Y0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_Y0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_Y0_CAPTURE 1
#define HPS_0_ARM_A9_0_BOX_Y0_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_BOX_Y0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_Y0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_Y0_EDGE_TYPE ANY
#define HPS_0_ARM_A9_0_BOX_Y0_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_Y0_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_Y0_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_Y0_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_Y0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_Y0_RESET_VALUE 0

/*
 * Macros for device 'test_16t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEST_16T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEST_16T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEST_16T_0_COMPONENT_NAME test_16t_0
#define HPS_0_ARM_A9_0_TEST_16T_0_BASE 0xff2000c0
#define HPS_0_ARM_A9_0_TEST_16T_0_SPAN 32
#define HPS_0_ARM_A9_0_TEST_16T_0_END 0xff2000df
#define HPS_0_ARM_A9_0_TEST_16T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_16T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_16T_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TEST_16T_0_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_TEST_16T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEST_16T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEST_16T_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_16T_0_FREQ 56000000
#define HPS_0_ARM_A9_0_TEST_16T_0_HAS_IN 0
#define HPS_0_ARM_A9_0_TEST_16T_0_HAS_OUT 1
#define HPS_0_ARM_A9_0_TEST_16T_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEST_16T_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_16T_0_RESET_VALUE 0

/*
 * Macros for device 'test_32t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEST_32T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEST_32T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEST_32T_0_COMPONENT_NAME test_32t_0
#define HPS_0_ARM_A9_0_TEST_32T_0_BASE 0xff2000d0
#define HPS_0_ARM_A9_0_TEST_32T_0_SPAN 32
#define HPS_0_ARM_A9_0_TEST_32T_0_END 0xff2000ef
#define HPS_0_ARM_A9_0_TEST_32T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_32T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_32T_0_CAPTURE 0
#define HPS_0_ARM_A9_0_TEST_32T_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TEST_32T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEST_32T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEST_32T_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_32T_0_FREQ 56000000
#define HPS_0_ARM_A9_0_TEST_32T_0_HAS_IN 0
#define HPS_0_ARM_A9_0_TEST_32T_0_HAS_OUT 1
#define HPS_0_ARM_A9_0_TEST_32T_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEST_32T_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_32T_0_RESET_VALUE 0

/*
 * Macros for device 'n_fish', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_N_FISH_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_N_FISH_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_N_FISH_COMPONENT_NAME n_fish
#define HPS_0_ARM_A9_0_N_FISH_BASE 0xff2000e0
#define HPS_0_ARM_A9_0_N_FISH_SPAN 32
#define HPS_0_ARM_A9_0_N_FISH_END 0xff2000ff
#define HPS_0_ARM_A9_0_N_FISH_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_N_FISH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_N_FISH_CAPTURE 0
#define HPS_0_ARM_A9_0_N_FISH_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_N_FISH_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_N_FISH_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_N_FISH_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_N_FISH_FREQ 56000000
#define HPS_0_ARM_A9_0_N_FISH_HAS_IN 0
#define HPS_0_ARM_A9_0_N_FISH_HAS_OUT 1
#define HPS_0_ARM_A9_0_N_FISH_HAS_TRI 0
#define HPS_0_ARM_A9_0_N_FISH_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_N_FISH_RESET_VALUE 0

/*
 * Macros for device 'box_xn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_XN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_XN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_XN_COMPONENT_NAME box_xn
#define HPS_0_ARM_A9_0_BOX_XN_BASE 0xff2000f0
#define HPS_0_ARM_A9_0_BOX_XN_SPAN 32
#define HPS_0_ARM_A9_0_BOX_XN_END 0xff20010f
#define HPS_0_ARM_A9_0_BOX_XN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_XN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_XN_CAPTURE 1
#define HPS_0_ARM_A9_0_BOX_XN_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_BOX_XN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_XN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_XN_EDGE_TYPE ANY
#define HPS_0_ARM_A9_0_BOX_XN_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_XN_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_XN_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_XN_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_XN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_XN_RESET_VALUE 0

/*
 * Macros for device 'box_x0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BOX_X0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BOX_X0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BOX_X0_COMPONENT_NAME box_x0
#define HPS_0_ARM_A9_0_BOX_X0_BASE 0xff200100
#define HPS_0_ARM_A9_0_BOX_X0_SPAN 32
#define HPS_0_ARM_A9_0_BOX_X0_END 0xff20011f
#define HPS_0_ARM_A9_0_BOX_X0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_X0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BOX_X0_CAPTURE 1
#define HPS_0_ARM_A9_0_BOX_X0_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_BOX_X0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BOX_X0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BOX_X0_EDGE_TYPE ANY
#define HPS_0_ARM_A9_0_BOX_X0_FREQ 56000000
#define HPS_0_ARM_A9_0_BOX_X0_HAS_IN 1
#define HPS_0_ARM_A9_0_BOX_X0_HAS_OUT 0
#define HPS_0_ARM_A9_0_BOX_X0_HAS_TRI 0
#define HPS_0_ARM_A9_0_BOX_X0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_BOX_X0_RESET_VALUE 0

/*
 * Macros for device 'reset_cnt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_RESET_CNT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_RESET_CNT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_RESET_CNT_COMPONENT_NAME reset_cnt
#define HPS_0_ARM_A9_0_RESET_CNT_BASE 0xff200200
#define HPS_0_ARM_A9_0_RESET_CNT_SPAN 32
#define HPS_0_ARM_A9_0_RESET_CNT_END 0xff20021f
#define HPS_0_ARM_A9_0_RESET_CNT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_RESET_CNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_RESET_CNT_CAPTURE 0
#define HPS_0_ARM_A9_0_RESET_CNT_DATA_WIDTH 1
#define HPS_0_ARM_A9_0_RESET_CNT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_RESET_CNT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_RESET_CNT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_RESET_CNT_FREQ 56000000
#define HPS_0_ARM_A9_0_RESET_CNT_HAS_IN 1
#define HPS_0_ARM_A9_0_RESET_CNT_HAS_OUT 0
#define HPS_0_ARM_A9_0_RESET_CNT_HAS_TRI 0
#define HPS_0_ARM_A9_0_RESET_CNT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_RESET_CNT_RESET_VALUE 0

/*
 * Macros for device 'sw_mass', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SW_MASS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SW_MASS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_SW_MASS_COMPONENT_NAME sw_mass
#define HPS_0_ARM_A9_0_SW_MASS_BASE 0xff200210
#define HPS_0_ARM_A9_0_SW_MASS_SPAN 32
#define HPS_0_ARM_A9_0_SW_MASS_END 0xff20022f
#define HPS_0_ARM_A9_0_SW_MASS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_SW_MASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_SW_MASS_CAPTURE 0
#define HPS_0_ARM_A9_0_SW_MASS_DATA_WIDTH 2
#define HPS_0_ARM_A9_0_SW_MASS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_SW_MASS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_SW_MASS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_SW_MASS_FREQ 56000000
#define HPS_0_ARM_A9_0_SW_MASS_HAS_IN 1
#define HPS_0_ARM_A9_0_SW_MASS_HAS_OUT 0
#define HPS_0_ARM_A9_0_SW_MASS_HAS_TRI 0
#define HPS_0_ARM_A9_0_SW_MASS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_SW_MASS_RESET_VALUE 0

/*
 * Macros for device 'test_cnt_balls', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEST_CNT_BALLS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_COMPONENT_NAME test_cnt_balls
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_BASE 0xff200220
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_SPAN 32
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_END 0xff20023f
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_CAPTURE 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_DATA_WIDTH 1
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_FREQ 56000000
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_HAS_IN 1
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_HAS_OUT 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_CNT_BALLS_RESET_VALUE 0

/*
 * Macros for device 'con_yark', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CON_YARK_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CON_YARK_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_CON_YARK_COMPONENT_NAME con_yark
#define HPS_0_ARM_A9_0_CON_YARK_BASE 0xff200230
#define HPS_0_ARM_A9_0_CON_YARK_SPAN 32
#define HPS_0_ARM_A9_0_CON_YARK_END 0xff20024f
#define HPS_0_ARM_A9_0_CON_YARK_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_CON_YARK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_CON_YARK_CAPTURE 0
#define HPS_0_ARM_A9_0_CON_YARK_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_CON_YARK_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_CON_YARK_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_CON_YARK_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_CON_YARK_FREQ 56000000
#define HPS_0_ARM_A9_0_CON_YARK_HAS_IN 0
#define HPS_0_ARM_A9_0_CON_YARK_HAS_OUT 1
#define HPS_0_ARM_A9_0_CON_YARK_HAS_TRI 0
#define HPS_0_ARM_A9_0_CON_YARK_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_CON_YARK_RESET_VALUE 0

/*
 * Macros for device 'x1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_X1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_X1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_X1_0_COMPONENT_NAME x1_0
#define HPS_0_ARM_A9_0_X1_0_BASE 0xff200240
#define HPS_0_ARM_A9_0_X1_0_SPAN 32
#define HPS_0_ARM_A9_0_X1_0_END 0xff20025f
#define HPS_0_ARM_A9_0_X1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_X1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_X1_0_CAPTURE 0
#define HPS_0_ARM_A9_0_X1_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_X1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_X1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_X1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_X1_0_FREQ 56000000
#define HPS_0_ARM_A9_0_X1_0_HAS_IN 0
#define HPS_0_ARM_A9_0_X1_0_HAS_OUT 1
#define HPS_0_ARM_A9_0_X1_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_X1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_X1_0_RESET_VALUE 0

/*
 * Macros for device 'x2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_X2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_X2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_X2_0_COMPONENT_NAME x2_0
#define HPS_0_ARM_A9_0_X2_0_BASE 0xff200250
#define HPS_0_ARM_A9_0_X2_0_SPAN 32
#define HPS_0_ARM_A9_0_X2_0_END 0xff20026f
#define HPS_0_ARM_A9_0_X2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_X2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_X2_0_CAPTURE 0
#define HPS_0_ARM_A9_0_X2_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_X2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_X2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_X2_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_X2_0_FREQ 56000000
#define HPS_0_ARM_A9_0_X2_0_HAS_IN 0
#define HPS_0_ARM_A9_0_X2_0_HAS_OUT 1
#define HPS_0_ARM_A9_0_X2_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_X2_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_X2_0_RESET_VALUE 0

/*
 * Macros for device 'y1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_Y1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_Y1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_Y1_0_COMPONENT_NAME y1_0
#define HPS_0_ARM_A9_0_Y1_0_BASE 0xff200260
#define HPS_0_ARM_A9_0_Y1_0_SPAN 32
#define HPS_0_ARM_A9_0_Y1_0_END 0xff20027f
#define HPS_0_ARM_A9_0_Y1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_Y1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_Y1_0_CAPTURE 0
#define HPS_0_ARM_A9_0_Y1_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_Y1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_Y1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_Y1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_Y1_0_FREQ 56000000
#define HPS_0_ARM_A9_0_Y1_0_HAS_IN 0
#define HPS_0_ARM_A9_0_Y1_0_HAS_OUT 1
#define HPS_0_ARM_A9_0_Y1_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_Y1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_Y1_0_RESET_VALUE 0

/*
 * Macros for device 'y2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_Y2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_Y2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_Y2_0_COMPONENT_NAME y2_0
#define HPS_0_ARM_A9_0_Y2_0_BASE 0xff200270
#define HPS_0_ARM_A9_0_Y2_0_SPAN 32
#define HPS_0_ARM_A9_0_Y2_0_END 0xff20028f
#define HPS_0_ARM_A9_0_Y2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_Y2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_Y2_0_CAPTURE 0
#define HPS_0_ARM_A9_0_Y2_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_Y2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_Y2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_Y2_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_Y2_0_FREQ 56000000
#define HPS_0_ARM_A9_0_Y2_0_HAS_IN 0
#define HPS_0_ARM_A9_0_Y2_0_HAS_OUT 1
#define HPS_0_ARM_A9_0_Y2_0_HAS_TRI 0
#define HPS_0_ARM_A9_0_Y2_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_Y2_0_RESET_VALUE 0

/*
 * Macros for device 'del_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DEL_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DEL_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_DEL_X_COMPONENT_NAME del_x
#define HPS_0_ARM_A9_0_DEL_X_BASE 0xff200280
#define HPS_0_ARM_A9_0_DEL_X_SPAN 32
#define HPS_0_ARM_A9_0_DEL_X_END 0xff20029f
#define HPS_0_ARM_A9_0_DEL_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_DEL_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_DEL_X_CAPTURE 0
#define HPS_0_ARM_A9_0_DEL_X_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_DEL_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_DEL_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_DEL_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_DEL_X_FREQ 56000000
#define HPS_0_ARM_A9_0_DEL_X_HAS_IN 0
#define HPS_0_ARM_A9_0_DEL_X_HAS_OUT 1
#define HPS_0_ARM_A9_0_DEL_X_HAS_TRI 0
#define HPS_0_ARM_A9_0_DEL_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_DEL_X_RESET_VALUE 0

/*
 * Macros for device 'del_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DEL_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DEL_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_DEL_Y_COMPONENT_NAME del_y
#define HPS_0_ARM_A9_0_DEL_Y_BASE 0xff200290
#define HPS_0_ARM_A9_0_DEL_Y_SPAN 32
#define HPS_0_ARM_A9_0_DEL_Y_END 0xff2002af
#define HPS_0_ARM_A9_0_DEL_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_DEL_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_DEL_Y_CAPTURE 0
#define HPS_0_ARM_A9_0_DEL_Y_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_DEL_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_DEL_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_DEL_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_DEL_Y_FREQ 56000000
#define HPS_0_ARM_A9_0_DEL_Y_HAS_IN 0
#define HPS_0_ARM_A9_0_DEL_Y_HAS_OUT 1
#define HPS_0_ARM_A9_0_DEL_Y_HAS_TRI 0
#define HPS_0_ARM_A9_0_DEL_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_DEL_Y_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_0_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_0_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_0_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_0_SYSID_QSYS_TIMESTAMP 1432624708

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_0_JTAG_UART_SPAN 16
#define HPS_0_ARM_A9_0_JTAG_UART_END 0xff22000f
#define HPS_0_ARM_A9_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff705fff

/*
 * Macros for device 'hps_0_fpgamgr', class 'fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw-gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff708fff

/*
 * Macros for device 'hps_0_gpio1', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw-gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff709fff

/*
 * Macros for device 'hps_0_gpio2', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw-gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70afff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 1048576
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff9fffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb00fff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb40fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc02fff

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc03fff

/*
 * Macros for device 'hps_0_i2c0', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc04fff

/*
 * Macros for device 'hps_0_i2c1', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc05fff

/*
 * Macros for device 'hps_0_i2c2', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc06fff

/*
 * Macros for device 'hps_0_i2c3', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc07fff

/*
 * Macros for device 'hps_0_timer0', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc08fff

/*
 * Macros for device 'hps_0_timer1', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc09fff

/*
 * Macros for device 'hps_0_timer2', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd00fff

/*
 * Macros for device 'hps_0_timer3', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd01fff

/*
 * Macros for device 'hps_0_clkmgr', class 'clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd05fff

/*
 * Macros for device 'hps_0_sysmgr', class 'sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 16384
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd0bfff

/*
 * Macros for device 'hps_0_dma', class 'dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spi0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPI0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPI0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPI0_COMPONENT_NAME hps_0_spi0
#define HPS_0_ARM_A9_0_HPS_0_SPI0_BASE 0xffe02000
#define HPS_0_ARM_A9_0_HPS_0_SPI0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SPI0_END 0xffe02fff

/*
 * Macros for device 'hps_0_spi1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPI1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPI1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPI1_COMPONENT_NAME hps_0_spi1
#define HPS_0_ARM_A9_0_HPS_0_SPI1_BASE 0xffe03000
#define HPS_0_ARM_A9_0_HPS_0_SPI1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SPI1_END 0xffe03fff

/*
 * Macros for device 'hps_0_timer', class 'timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_BASE 0xc0000000
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_END 0xc000ffff
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_ARM_A9_1_PIO_LED_BASE 0xff200000
#define HPS_0_ARM_A9_1_PIO_LED_SPAN 32
#define HPS_0_ARM_A9_1_PIO_LED_END 0xff20001f
#define HPS_0_ARM_A9_1_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_LED_CAPTURE 0
#define HPS_0_ARM_A9_1_PIO_LED_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PIO_LED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_LED_FREQ 56000000
#define HPS_0_ARM_A9_1_PIO_LED_HAS_IN 0
#define HPS_0_ARM_A9_1_PIO_LED_HAS_OUT 1
#define HPS_0_ARM_A9_1_PIO_LED_HAS_TRI 0
#define HPS_0_ARM_A9_1_PIO_LED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_LED_RESET_VALUE 0

/*
 * Macros for device 'n_frame', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_N_FRAME_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_N_FRAME_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_N_FRAME_COMPONENT_NAME n_frame
#define HPS_0_ARM_A9_1_N_FRAME_BASE 0xff200010
#define HPS_0_ARM_A9_1_N_FRAME_SPAN 32
#define HPS_0_ARM_A9_1_N_FRAME_END 0xff20002f
#define HPS_0_ARM_A9_1_N_FRAME_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_N_FRAME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_N_FRAME_CAPTURE 0
#define HPS_0_ARM_A9_1_N_FRAME_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_N_FRAME_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_N_FRAME_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_N_FRAME_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_N_FRAME_FREQ 56000000
#define HPS_0_ARM_A9_1_N_FRAME_HAS_IN 1
#define HPS_0_ARM_A9_1_N_FRAME_HAS_OUT 0
#define HPS_0_ARM_A9_1_N_FRAME_HAS_TRI 0
#define HPS_0_ARM_A9_1_N_FRAME_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_N_FRAME_RESET_VALUE 0

/*
 * Macros for device 'x_max', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_X_MAX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_X_MAX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_X_MAX_COMPONENT_NAME x_max
#define HPS_0_ARM_A9_1_X_MAX_BASE 0xff200020
#define HPS_0_ARM_A9_1_X_MAX_SPAN 32
#define HPS_0_ARM_A9_1_X_MAX_END 0xff20003f
#define HPS_0_ARM_A9_1_X_MAX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_X_MAX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_X_MAX_CAPTURE 0
#define HPS_0_ARM_A9_1_X_MAX_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_X_MAX_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_X_MAX_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_X_MAX_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_X_MAX_FREQ 56000000
#define HPS_0_ARM_A9_1_X_MAX_HAS_IN 1
#define HPS_0_ARM_A9_1_X_MAX_HAS_OUT 0
#define HPS_0_ARM_A9_1_X_MAX_HAS_TRI 0
#define HPS_0_ARM_A9_1_X_MAX_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_X_MAX_RESET_VALUE 0

/*
 * Macros for device 'x_min', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_X_MIN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_X_MIN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_X_MIN_COMPONENT_NAME x_min
#define HPS_0_ARM_A9_1_X_MIN_BASE 0xff200030
#define HPS_0_ARM_A9_1_X_MIN_SPAN 32
#define HPS_0_ARM_A9_1_X_MIN_END 0xff20004f
#define HPS_0_ARM_A9_1_X_MIN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_X_MIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_X_MIN_CAPTURE 0
#define HPS_0_ARM_A9_1_X_MIN_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_X_MIN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_X_MIN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_X_MIN_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_X_MIN_FREQ 56000000
#define HPS_0_ARM_A9_1_X_MIN_HAS_IN 1
#define HPS_0_ARM_A9_1_X_MIN_HAS_OUT 0
#define HPS_0_ARM_A9_1_X_MIN_HAS_TRI 0
#define HPS_0_ARM_A9_1_X_MIN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_X_MIN_RESET_VALUE 0

/*
 * Macros for device 'req_res', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_REQ_RES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_REQ_RES_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_REQ_RES_COMPONENT_NAME req_res
#define HPS_0_ARM_A9_1_REQ_RES_BASE 0xff200040
#define HPS_0_ARM_A9_1_REQ_RES_SPAN 32
#define HPS_0_ARM_A9_1_REQ_RES_END 0xff20005f
#define HPS_0_ARM_A9_1_REQ_RES_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_REQ_RES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_REQ_RES_CAPTURE 0
#define HPS_0_ARM_A9_1_REQ_RES_DATA_WIDTH 1
#define HPS_0_ARM_A9_1_REQ_RES_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_REQ_RES_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_REQ_RES_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_REQ_RES_FREQ 56000000
#define HPS_0_ARM_A9_1_REQ_RES_HAS_IN 0
#define HPS_0_ARM_A9_1_REQ_RES_HAS_OUT 1
#define HPS_0_ARM_A9_1_REQ_RES_HAS_TRI 0
#define HPS_0_ARM_A9_1_REQ_RES_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_REQ_RES_RESET_VALUE 0

/*
 * Macros for device 'addr_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ADDR_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ADDR_OUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_ADDR_OUT_COMPONENT_NAME addr_out
#define HPS_0_ARM_A9_1_ADDR_OUT_BASE 0xff200050
#define HPS_0_ARM_A9_1_ADDR_OUT_SPAN 32
#define HPS_0_ARM_A9_1_ADDR_OUT_END 0xff20006f
#define HPS_0_ARM_A9_1_ADDR_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_ADDR_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_ADDR_OUT_CAPTURE 0
#define HPS_0_ARM_A9_1_ADDR_OUT_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_ADDR_OUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_ADDR_OUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_ADDR_OUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_ADDR_OUT_FREQ 56000000
#define HPS_0_ARM_A9_1_ADDR_OUT_HAS_IN 0
#define HPS_0_ARM_A9_1_ADDR_OUT_HAS_OUT 1
#define HPS_0_ARM_A9_1_ADDR_OUT_HAS_TRI 0
#define HPS_0_ARM_A9_1_ADDR_OUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_ADDR_OUT_RESET_VALUE 0

/*
 * Macros for device 'box_addr', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_ADDR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_ADDR_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_ADDR_COMPONENT_NAME box_addr
#define HPS_0_ARM_A9_1_BOX_ADDR_BASE 0xff200060
#define HPS_0_ARM_A9_1_BOX_ADDR_SPAN 32
#define HPS_0_ARM_A9_1_BOX_ADDR_END 0xff20007f
#define HPS_0_ARM_A9_1_BOX_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_ADDR_CAPTURE 0
#define HPS_0_ARM_A9_1_BOX_ADDR_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_BOX_ADDR_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_ADDR_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_ADDR_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_ADDR_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_ADDR_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_ADDR_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_ADDR_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_ADDR_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_ADDR_RESET_VALUE 0

/*
 * Macros for device 'box_n', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_N_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_N_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_N_COMPONENT_NAME box_n
#define HPS_0_ARM_A9_1_BOX_N_BASE 0xff200070
#define HPS_0_ARM_A9_1_BOX_N_SPAN 32
#define HPS_0_ARM_A9_1_BOX_N_END 0xff20008f
#define HPS_0_ARM_A9_1_BOX_N_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_N_CAPTURE 0
#define HPS_0_ARM_A9_1_BOX_N_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_BOX_N_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_N_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_N_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_N_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_N_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_N_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_N_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_N_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_N_RESET_VALUE 0

/*
 * Macros for device 'box_req', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_REQ_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_REQ_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_REQ_COMPONENT_NAME box_req
#define HPS_0_ARM_A9_1_BOX_REQ_BASE 0xff200080
#define HPS_0_ARM_A9_1_BOX_REQ_SPAN 32
#define HPS_0_ARM_A9_1_BOX_REQ_END 0xff20009f
#define HPS_0_ARM_A9_1_BOX_REQ_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_REQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_REQ_CAPTURE 1
#define HPS_0_ARM_A9_1_BOX_REQ_DATA_WIDTH 1
#define HPS_0_ARM_A9_1_BOX_REQ_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_REQ_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_REQ_EDGE_TYPE RISING
#define HPS_0_ARM_A9_1_BOX_REQ_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_REQ_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_REQ_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_REQ_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_REQ_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_REQ_RESET_VALUE 0

/*
 * Macros for device 'n_pix', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_N_PIX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_N_PIX_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_N_PIX_COMPONENT_NAME n_pix
#define HPS_0_ARM_A9_1_N_PIX_BASE 0xff200090
#define HPS_0_ARM_A9_1_N_PIX_SPAN 32
#define HPS_0_ARM_A9_1_N_PIX_END 0xff2000af
#define HPS_0_ARM_A9_1_N_PIX_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_N_PIX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_N_PIX_CAPTURE 1
#define HPS_0_ARM_A9_1_N_PIX_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_N_PIX_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_N_PIX_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_N_PIX_EDGE_TYPE ANY
#define HPS_0_ARM_A9_1_N_PIX_FREQ 56000000
#define HPS_0_ARM_A9_1_N_PIX_HAS_IN 1
#define HPS_0_ARM_A9_1_N_PIX_HAS_OUT 0
#define HPS_0_ARM_A9_1_N_PIX_HAS_TRI 0
#define HPS_0_ARM_A9_1_N_PIX_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_N_PIX_RESET_VALUE 0

/*
 * Macros for device 'box_yn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_YN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_YN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_YN_COMPONENT_NAME box_yn
#define HPS_0_ARM_A9_1_BOX_YN_BASE 0xff2000a0
#define HPS_0_ARM_A9_1_BOX_YN_SPAN 32
#define HPS_0_ARM_A9_1_BOX_YN_END 0xff2000bf
#define HPS_0_ARM_A9_1_BOX_YN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_YN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_YN_CAPTURE 1
#define HPS_0_ARM_A9_1_BOX_YN_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_BOX_YN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_YN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_YN_EDGE_TYPE ANY
#define HPS_0_ARM_A9_1_BOX_YN_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_YN_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_YN_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_YN_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_YN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_YN_RESET_VALUE 0

/*
 * Macros for device 'box_y0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_Y0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_Y0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_Y0_COMPONENT_NAME box_y0
#define HPS_0_ARM_A9_1_BOX_Y0_BASE 0xff2000b0
#define HPS_0_ARM_A9_1_BOX_Y0_SPAN 32
#define HPS_0_ARM_A9_1_BOX_Y0_END 0xff2000cf
#define HPS_0_ARM_A9_1_BOX_Y0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_Y0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_Y0_CAPTURE 1
#define HPS_0_ARM_A9_1_BOX_Y0_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_BOX_Y0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_Y0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_Y0_EDGE_TYPE ANY
#define HPS_0_ARM_A9_1_BOX_Y0_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_Y0_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_Y0_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_Y0_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_Y0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_Y0_RESET_VALUE 0

/*
 * Macros for device 'test_16t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEST_16T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEST_16T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEST_16T_0_COMPONENT_NAME test_16t_0
#define HPS_0_ARM_A9_1_TEST_16T_0_BASE 0xff2000c0
#define HPS_0_ARM_A9_1_TEST_16T_0_SPAN 32
#define HPS_0_ARM_A9_1_TEST_16T_0_END 0xff2000df
#define HPS_0_ARM_A9_1_TEST_16T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_16T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_16T_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TEST_16T_0_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_TEST_16T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEST_16T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEST_16T_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_16T_0_FREQ 56000000
#define HPS_0_ARM_A9_1_TEST_16T_0_HAS_IN 0
#define HPS_0_ARM_A9_1_TEST_16T_0_HAS_OUT 1
#define HPS_0_ARM_A9_1_TEST_16T_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEST_16T_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_16T_0_RESET_VALUE 0

/*
 * Macros for device 'test_32t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEST_32T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEST_32T_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEST_32T_0_COMPONENT_NAME test_32t_0
#define HPS_0_ARM_A9_1_TEST_32T_0_BASE 0xff2000d0
#define HPS_0_ARM_A9_1_TEST_32T_0_SPAN 32
#define HPS_0_ARM_A9_1_TEST_32T_0_END 0xff2000ef
#define HPS_0_ARM_A9_1_TEST_32T_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_32T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_32T_0_CAPTURE 0
#define HPS_0_ARM_A9_1_TEST_32T_0_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TEST_32T_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEST_32T_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEST_32T_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_32T_0_FREQ 56000000
#define HPS_0_ARM_A9_1_TEST_32T_0_HAS_IN 0
#define HPS_0_ARM_A9_1_TEST_32T_0_HAS_OUT 1
#define HPS_0_ARM_A9_1_TEST_32T_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEST_32T_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_32T_0_RESET_VALUE 0

/*
 * Macros for device 'n_fish', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_N_FISH_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_N_FISH_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_N_FISH_COMPONENT_NAME n_fish
#define HPS_0_ARM_A9_1_N_FISH_BASE 0xff2000e0
#define HPS_0_ARM_A9_1_N_FISH_SPAN 32
#define HPS_0_ARM_A9_1_N_FISH_END 0xff2000ff
#define HPS_0_ARM_A9_1_N_FISH_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_N_FISH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_N_FISH_CAPTURE 0
#define HPS_0_ARM_A9_1_N_FISH_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_N_FISH_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_N_FISH_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_N_FISH_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_N_FISH_FREQ 56000000
#define HPS_0_ARM_A9_1_N_FISH_HAS_IN 0
#define HPS_0_ARM_A9_1_N_FISH_HAS_OUT 1
#define HPS_0_ARM_A9_1_N_FISH_HAS_TRI 0
#define HPS_0_ARM_A9_1_N_FISH_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_N_FISH_RESET_VALUE 0

/*
 * Macros for device 'box_xn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_XN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_XN_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_XN_COMPONENT_NAME box_xn
#define HPS_0_ARM_A9_1_BOX_XN_BASE 0xff2000f0
#define HPS_0_ARM_A9_1_BOX_XN_SPAN 32
#define HPS_0_ARM_A9_1_BOX_XN_END 0xff20010f
#define HPS_0_ARM_A9_1_BOX_XN_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_XN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_XN_CAPTURE 1
#define HPS_0_ARM_A9_1_BOX_XN_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_BOX_XN_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_XN_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_XN_EDGE_TYPE ANY
#define HPS_0_ARM_A9_1_BOX_XN_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_XN_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_XN_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_XN_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_XN_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_XN_RESET_VALUE 0

/*
 * Macros for device 'box_x0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BOX_X0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BOX_X0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BOX_X0_COMPONENT_NAME box_x0
#define HPS_0_ARM_A9_1_BOX_X0_BASE 0xff200100
#define HPS_0_ARM_A9_1_BOX_X0_SPAN 32
#define HPS_0_ARM_A9_1_BOX_X0_END 0xff20011f
#define HPS_0_ARM_A9_1_BOX_X0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_X0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BOX_X0_CAPTURE 1
#define HPS_0_ARM_A9_1_BOX_X0_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_BOX_X0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BOX_X0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BOX_X0_EDGE_TYPE ANY
#define HPS_0_ARM_A9_1_BOX_X0_FREQ 56000000
#define HPS_0_ARM_A9_1_BOX_X0_HAS_IN 1
#define HPS_0_ARM_A9_1_BOX_X0_HAS_OUT 0
#define HPS_0_ARM_A9_1_BOX_X0_HAS_TRI 0
#define HPS_0_ARM_A9_1_BOX_X0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_BOX_X0_RESET_VALUE 0

/*
 * Macros for device 'reset_cnt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_RESET_CNT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_RESET_CNT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_RESET_CNT_COMPONENT_NAME reset_cnt
#define HPS_0_ARM_A9_1_RESET_CNT_BASE 0xff200200
#define HPS_0_ARM_A9_1_RESET_CNT_SPAN 32
#define HPS_0_ARM_A9_1_RESET_CNT_END 0xff20021f
#define HPS_0_ARM_A9_1_RESET_CNT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_RESET_CNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_RESET_CNT_CAPTURE 0
#define HPS_0_ARM_A9_1_RESET_CNT_DATA_WIDTH 1
#define HPS_0_ARM_A9_1_RESET_CNT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_RESET_CNT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_RESET_CNT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_RESET_CNT_FREQ 56000000
#define HPS_0_ARM_A9_1_RESET_CNT_HAS_IN 1
#define HPS_0_ARM_A9_1_RESET_CNT_HAS_OUT 0
#define HPS_0_ARM_A9_1_RESET_CNT_HAS_TRI 0
#define HPS_0_ARM_A9_1_RESET_CNT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_RESET_CNT_RESET_VALUE 0

/*
 * Macros for device 'sw_mass', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SW_MASS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SW_MASS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_SW_MASS_COMPONENT_NAME sw_mass
#define HPS_0_ARM_A9_1_SW_MASS_BASE 0xff200210
#define HPS_0_ARM_A9_1_SW_MASS_SPAN 32
#define HPS_0_ARM_A9_1_SW_MASS_END 0xff20022f
#define HPS_0_ARM_A9_1_SW_MASS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_SW_MASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_SW_MASS_CAPTURE 0
#define HPS_0_ARM_A9_1_SW_MASS_DATA_WIDTH 2
#define HPS_0_ARM_A9_1_SW_MASS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_SW_MASS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_SW_MASS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_SW_MASS_FREQ 56000000
#define HPS_0_ARM_A9_1_SW_MASS_HAS_IN 1
#define HPS_0_ARM_A9_1_SW_MASS_HAS_OUT 0
#define HPS_0_ARM_A9_1_SW_MASS_HAS_TRI 0
#define HPS_0_ARM_A9_1_SW_MASS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_SW_MASS_RESET_VALUE 0

/*
 * Macros for device 'test_cnt_balls', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEST_CNT_BALLS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_COMPONENT_NAME test_cnt_balls
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_BASE 0xff200220
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_SPAN 32
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_END 0xff20023f
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_CAPTURE 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_DATA_WIDTH 1
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_FREQ 56000000
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_HAS_IN 1
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_HAS_OUT 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_CNT_BALLS_RESET_VALUE 0

/*
 * Macros for device 'con_yark', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CON_YARK_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CON_YARK_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_CON_YARK_COMPONENT_NAME con_yark
#define HPS_0_ARM_A9_1_CON_YARK_BASE 0xff200230
#define HPS_0_ARM_A9_1_CON_YARK_SPAN 32
#define HPS_0_ARM_A9_1_CON_YARK_END 0xff20024f
#define HPS_0_ARM_A9_1_CON_YARK_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_CON_YARK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_CON_YARK_CAPTURE 0
#define HPS_0_ARM_A9_1_CON_YARK_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_CON_YARK_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_CON_YARK_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_CON_YARK_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_CON_YARK_FREQ 56000000
#define HPS_0_ARM_A9_1_CON_YARK_HAS_IN 0
#define HPS_0_ARM_A9_1_CON_YARK_HAS_OUT 1
#define HPS_0_ARM_A9_1_CON_YARK_HAS_TRI 0
#define HPS_0_ARM_A9_1_CON_YARK_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_CON_YARK_RESET_VALUE 0

/*
 * Macros for device 'x1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_X1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_X1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_X1_0_COMPONENT_NAME x1_0
#define HPS_0_ARM_A9_1_X1_0_BASE 0xff200240
#define HPS_0_ARM_A9_1_X1_0_SPAN 32
#define HPS_0_ARM_A9_1_X1_0_END 0xff20025f
#define HPS_0_ARM_A9_1_X1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_X1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_X1_0_CAPTURE 0
#define HPS_0_ARM_A9_1_X1_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_X1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_X1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_X1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_X1_0_FREQ 56000000
#define HPS_0_ARM_A9_1_X1_0_HAS_IN 0
#define HPS_0_ARM_A9_1_X1_0_HAS_OUT 1
#define HPS_0_ARM_A9_1_X1_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_X1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_X1_0_RESET_VALUE 0

/*
 * Macros for device 'x2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_X2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_X2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_X2_0_COMPONENT_NAME x2_0
#define HPS_0_ARM_A9_1_X2_0_BASE 0xff200250
#define HPS_0_ARM_A9_1_X2_0_SPAN 32
#define HPS_0_ARM_A9_1_X2_0_END 0xff20026f
#define HPS_0_ARM_A9_1_X2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_X2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_X2_0_CAPTURE 0
#define HPS_0_ARM_A9_1_X2_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_X2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_X2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_X2_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_X2_0_FREQ 56000000
#define HPS_0_ARM_A9_1_X2_0_HAS_IN 0
#define HPS_0_ARM_A9_1_X2_0_HAS_OUT 1
#define HPS_0_ARM_A9_1_X2_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_X2_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_X2_0_RESET_VALUE 0

/*
 * Macros for device 'y1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_Y1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_Y1_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_Y1_0_COMPONENT_NAME y1_0
#define HPS_0_ARM_A9_1_Y1_0_BASE 0xff200260
#define HPS_0_ARM_A9_1_Y1_0_SPAN 32
#define HPS_0_ARM_A9_1_Y1_0_END 0xff20027f
#define HPS_0_ARM_A9_1_Y1_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_Y1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_Y1_0_CAPTURE 0
#define HPS_0_ARM_A9_1_Y1_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_Y1_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_Y1_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_Y1_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_Y1_0_FREQ 56000000
#define HPS_0_ARM_A9_1_Y1_0_HAS_IN 0
#define HPS_0_ARM_A9_1_Y1_0_HAS_OUT 1
#define HPS_0_ARM_A9_1_Y1_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_Y1_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_Y1_0_RESET_VALUE 0

/*
 * Macros for device 'y2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_Y2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_Y2_0_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_Y2_0_COMPONENT_NAME y2_0
#define HPS_0_ARM_A9_1_Y2_0_BASE 0xff200270
#define HPS_0_ARM_A9_1_Y2_0_SPAN 32
#define HPS_0_ARM_A9_1_Y2_0_END 0xff20028f
#define HPS_0_ARM_A9_1_Y2_0_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_Y2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_Y2_0_CAPTURE 0
#define HPS_0_ARM_A9_1_Y2_0_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_Y2_0_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_Y2_0_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_Y2_0_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_Y2_0_FREQ 56000000
#define HPS_0_ARM_A9_1_Y2_0_HAS_IN 0
#define HPS_0_ARM_A9_1_Y2_0_HAS_OUT 1
#define HPS_0_ARM_A9_1_Y2_0_HAS_TRI 0
#define HPS_0_ARM_A9_1_Y2_0_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_Y2_0_RESET_VALUE 0

/*
 * Macros for device 'del_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DEL_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DEL_X_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_DEL_X_COMPONENT_NAME del_x
#define HPS_0_ARM_A9_1_DEL_X_BASE 0xff200280
#define HPS_0_ARM_A9_1_DEL_X_SPAN 32
#define HPS_0_ARM_A9_1_DEL_X_END 0xff20029f
#define HPS_0_ARM_A9_1_DEL_X_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_DEL_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_DEL_X_CAPTURE 0
#define HPS_0_ARM_A9_1_DEL_X_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_DEL_X_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_DEL_X_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_DEL_X_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_DEL_X_FREQ 56000000
#define HPS_0_ARM_A9_1_DEL_X_HAS_IN 0
#define HPS_0_ARM_A9_1_DEL_X_HAS_OUT 1
#define HPS_0_ARM_A9_1_DEL_X_HAS_TRI 0
#define HPS_0_ARM_A9_1_DEL_X_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_DEL_X_RESET_VALUE 0

/*
 * Macros for device 'del_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DEL_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DEL_Y_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_DEL_Y_COMPONENT_NAME del_y
#define HPS_0_ARM_A9_1_DEL_Y_BASE 0xff200290
#define HPS_0_ARM_A9_1_DEL_Y_SPAN 32
#define HPS_0_ARM_A9_1_DEL_Y_END 0xff2002af
#define HPS_0_ARM_A9_1_DEL_Y_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_DEL_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_DEL_Y_CAPTURE 0
#define HPS_0_ARM_A9_1_DEL_Y_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_DEL_Y_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_DEL_Y_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_DEL_Y_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_DEL_Y_FREQ 56000000
#define HPS_0_ARM_A9_1_DEL_Y_HAS_IN 0
#define HPS_0_ARM_A9_1_DEL_Y_HAS_OUT 1
#define HPS_0_ARM_A9_1_DEL_Y_HAS_TRI 0
#define HPS_0_ARM_A9_1_DEL_Y_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_DEL_Y_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_1_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_1_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_1_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_1_SYSID_QSYS_TIMESTAMP 1432624708

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_1_JTAG_UART_SPAN 16
#define HPS_0_ARM_A9_1_JTAG_UART_END 0xff22000f
#define HPS_0_ARM_A9_1_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff705fff

/*
 * Macros for device 'hps_0_fpgamgr', class 'fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw-gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff708fff

/*
 * Macros for device 'hps_0_gpio1', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw-gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff709fff

/*
 * Macros for device 'hps_0_gpio2', class 'dw-gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw-gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70afff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 1048576
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff9fffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb00fff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb40fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc02fff

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc03fff

/*
 * Macros for device 'hps_0_i2c0', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc04fff

/*
 * Macros for device 'hps_0_i2c1', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc05fff

/*
 * Macros for device 'hps_0_i2c2', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc06fff

/*
 * Macros for device 'hps_0_i2c3', class 'designware-i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware-i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc07fff

/*
 * Macros for device 'hps_0_timer0', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc08fff

/*
 * Macros for device 'hps_0_timer1', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc09fff

/*
 * Macros for device 'hps_0_timer2', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd00fff

/*
 * Macros for device 'hps_0_timer3', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd01fff

/*
 * Macros for device 'hps_0_clkmgr', class 'clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd05fff

/*
 * Macros for device 'hps_0_sysmgr', class 'sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 16384
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd0bfff

/*
 * Macros for device 'hps_0_dma', class 'dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spi0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPI0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPI0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPI0_COMPONENT_NAME hps_0_spi0
#define HPS_0_ARM_A9_1_HPS_0_SPI0_BASE 0xffe02000
#define HPS_0_ARM_A9_1_HPS_0_SPI0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SPI0_END 0xffe02fff

/*
 * Macros for device 'hps_0_spi1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPI1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPI1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPI1_COMPONENT_NAME hps_0_spi1
#define HPS_0_ARM_A9_1_HPS_0_SPI1_BASE 0xffe03000
#define HPS_0_ARM_A9_1_HPS_0_SPI1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SPI1_END 0xffe03fff

/*
 * Macros for device 'hps_0_timer', class 'timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_ONLY_MASTER_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_ONLY_MASTER_HPS_0_GMAC0_BASE 0xff700000
#define HPS_ONLY_MASTER_HPS_0_GMAC0_SPAN 8192
#define HPS_ONLY_MASTER_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_ONLY_MASTER_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_ONLY_MASTER_HPS_0_GMAC1_BASE 0xff702000
#define HPS_ONLY_MASTER_HPS_0_GMAC1_SPAN 8192
#define HPS_ONLY_MASTER_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_ONLY_MASTER_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_ONLY_MASTER_HPS_0_SDMMC_BASE 0xff704000
#define HPS_ONLY_MASTER_HPS_0_SDMMC_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'qspi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_QSPI_COMPONENT_TYPE qspi
#define HPS_ONLY_MASTER_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_ONLY_MASTER_HPS_0_QSPI_BASE 0xff705000
#define HPS_ONLY_MASTER_HPS_0_QSPI_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_QSPI_END 0xff705fff

/*
 * Macros for device 'hps_0_fpgamgr', class 'fpgamgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_COMPONENT_TYPE fpgamgr
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw-gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO0_COMPONENT_TYPE dw-gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_ONLY_MASTER_HPS_0_GPIO0_BASE 0xff708000
#define HPS_ONLY_MASTER_HPS_0_GPIO0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_GPIO0_END 0xff708fff

/*
 * Macros for device 'hps_0_gpio1', class 'dw-gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO1_COMPONENT_TYPE dw-gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_ONLY_MASTER_HPS_0_GPIO1_BASE 0xff709000
#define HPS_ONLY_MASTER_HPS_0_GPIO1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_GPIO1_END 0xff709fff

/*
 * Macros for device 'hps_0_gpio2', class 'dw-gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO2_COMPONENT_TYPE dw-gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_ONLY_MASTER_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_ONLY_MASTER_HPS_0_GPIO2_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_GPIO2_END 0xff70afff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_ONLY_MASTER_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_ONLY_MASTER_HPS_0_NAND0_BASE 0xff900000
#define HPS_ONLY_MASTER_HPS_0_NAND0_SPAN 1048576
#define HPS_ONLY_MASTER_HPS_0_NAND0_END 0xff9fffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_ONLY_MASTER_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_ONLY_MASTER_HPS_0_USB0_BASE 0xffb00000
#define HPS_ONLY_MASTER_HPS_0_USB0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_USB0_END 0xffb00fff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_ONLY_MASTER_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_ONLY_MASTER_HPS_0_USB1_BASE 0xffb40000
#define HPS_ONLY_MASTER_HPS_0_USB1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_USB1_END 0xffb40fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_ONLY_MASTER_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_ONLY_MASTER_HPS_0_UART0_BASE 0xffc02000
#define HPS_ONLY_MASTER_HPS_0_UART0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_UART0_END 0xffc02fff

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_ONLY_MASTER_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_ONLY_MASTER_HPS_0_UART1_BASE 0xffc03000
#define HPS_ONLY_MASTER_HPS_0_UART1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_UART1_END 0xffc03fff

/*
 * Macros for device 'hps_0_i2c0', class 'designware-i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C0_COMPONENT_TYPE designware-i2c
#define HPS_ONLY_MASTER_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_ONLY_MASTER_HPS_0_I2C0_BASE 0xffc04000
#define HPS_ONLY_MASTER_HPS_0_I2C0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_I2C0_END 0xffc04fff

/*
 * Macros for device 'hps_0_i2c1', class 'designware-i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C1_COMPONENT_TYPE designware-i2c
#define HPS_ONLY_MASTER_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_ONLY_MASTER_HPS_0_I2C1_BASE 0xffc05000
#define HPS_ONLY_MASTER_HPS_0_I2C1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_I2C1_END 0xffc05fff

/*
 * Macros for device 'hps_0_i2c2', class 'designware-i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C2_COMPONENT_TYPE designware-i2c
#define HPS_ONLY_MASTER_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_ONLY_MASTER_HPS_0_I2C2_BASE 0xffc06000
#define HPS_ONLY_MASTER_HPS_0_I2C2_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_I2C2_END 0xffc06fff

/*
 * Macros for device 'hps_0_i2c3', class 'designware-i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C3_COMPONENT_TYPE designware-i2c
#define HPS_ONLY_MASTER_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_ONLY_MASTER_HPS_0_I2C3_BASE 0xffc07000
#define HPS_ONLY_MASTER_HPS_0_I2C3_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_I2C3_END 0xffc07fff

/*
 * Macros for device 'hps_0_timer0', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER0_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_ONLY_MASTER_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_ONLY_MASTER_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_ONLY_MASTER_HPS_0_TIMER0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_TIMER0_END 0xffc08fff

/*
 * Macros for device 'hps_0_timer1', class 'dw-apb-timer-sp'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER1_COMPONENT_TYPE dw-apb-timer-sp
#define HPS_ONLY_MASTER_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_ONLY_MASTER_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_ONLY_MASTER_HPS_0_TIMER1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_TIMER1_END 0xffc09fff

/*
 * Macros for device 'hps_0_timer2', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER2_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_ONLY_MASTER_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_ONLY_MASTER_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_ONLY_MASTER_HPS_0_TIMER2_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_TIMER2_END 0xffd00fff

/*
 * Macros for device 'hps_0_timer3', class 'dw-apb-timer-osc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER3_COMPONENT_TYPE dw-apb-timer-osc
#define HPS_ONLY_MASTER_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_ONLY_MASTER_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_ONLY_MASTER_HPS_0_TIMER3_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_TIMER3_END 0xffd01fff

/*
 * Macros for device 'hps_0_clkmgr', class 'clkmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_COMPONENT_TYPE clkmgr
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'rstmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_COMPONENT_TYPE rstmgr
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_END 0xffd05fff

/*
 * Macros for device 'hps_0_sysmgr', class 'sysmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_COMPONENT_TYPE sysmgr
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_SPAN 16384
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_END 0xffd0bfff

/*
 * Macros for device 'hps_0_dma', class 'dma'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DMA_COMPONENT_TYPE dma
#define HPS_ONLY_MASTER_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_ONLY_MASTER_HPS_0_DMA_BASE 0xffe01000
#define HPS_ONLY_MASTER_HPS_0_DMA_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spi0', class 'spi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SPI0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SPI0_COMPONENT_TYPE spi
#define HPS_ONLY_MASTER_HPS_0_SPI0_COMPONENT_NAME hps_0_spi0
#define HPS_ONLY_MASTER_HPS_0_SPI0_BASE 0xffe02000
#define HPS_ONLY_MASTER_HPS_0_SPI0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SPI0_END 0xffe02fff

/*
 * Macros for device 'hps_0_spi1', class 'spi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SPI1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SPI1_COMPONENT_TYPE spi
#define HPS_ONLY_MASTER_HPS_0_SPI1_COMPONENT_NAME hps_0_spi1
#define HPS_ONLY_MASTER_HPS_0_SPI1_BASE 0xffe03000
#define HPS_ONLY_MASTER_HPS_0_SPI1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SPI1_END 0xffe03fff

/*
 * Macros for device 'hps_0_timer', class 'timer'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER_COMPONENT_TYPE timer
#define HPS_ONLY_MASTER_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_ONLY_MASTER_HPS_0_TIMER_BASE 0xfffec600
#define HPS_ONLY_MASTER_HPS_0_TIMER_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'L2'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_L2_COMPONENT_TYPE L2
#define HPS_ONLY_MASTER_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_ONLY_MASTER_HPS_0_L2_BASE 0xfffef000
#define HPS_ONLY_MASTER_HPS_0_L2_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_END 0xffffffff

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_BASE 0x10000
#define FPGA_ONLY_MASTER_SYSID_QSYS_SPAN 8
#define FPGA_ONLY_MASTER_SYSID_QSYS_END 0x10007
#define FPGA_ONLY_MASTER_SYSID_QSYS_ID 2899645186
#define FPGA_ONLY_MASTER_SYSID_QSYS_TIMESTAMP 1432624708

/*
 * Macros for device 'n_frame', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_N_FRAME_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_N_FRAME_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_N_FRAME_COMPONENT_NAME n_frame
#define FPGA_ONLY_MASTER_N_FRAME_BASE 0x10010
#define FPGA_ONLY_MASTER_N_FRAME_SPAN 32
#define FPGA_ONLY_MASTER_N_FRAME_END 0x1002f
#define FPGA_ONLY_MASTER_N_FRAME_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_N_FRAME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_N_FRAME_CAPTURE 0
#define FPGA_ONLY_MASTER_N_FRAME_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_N_FRAME_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_N_FRAME_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_N_FRAME_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_N_FRAME_FREQ 56000000
#define FPGA_ONLY_MASTER_N_FRAME_HAS_IN 1
#define FPGA_ONLY_MASTER_N_FRAME_HAS_OUT 0
#define FPGA_ONLY_MASTER_N_FRAME_HAS_TRI 0
#define FPGA_ONLY_MASTER_N_FRAME_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_N_FRAME_RESET_VALUE 0

/*
 * Macros for device 'x_max', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_X_MAX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_X_MAX_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_X_MAX_COMPONENT_NAME x_max
#define FPGA_ONLY_MASTER_X_MAX_BASE 0x10020
#define FPGA_ONLY_MASTER_X_MAX_SPAN 32
#define FPGA_ONLY_MASTER_X_MAX_END 0x1003f
#define FPGA_ONLY_MASTER_X_MAX_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_X_MAX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_X_MAX_CAPTURE 0
#define FPGA_ONLY_MASTER_X_MAX_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_X_MAX_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_X_MAX_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_X_MAX_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_X_MAX_FREQ 56000000
#define FPGA_ONLY_MASTER_X_MAX_HAS_IN 1
#define FPGA_ONLY_MASTER_X_MAX_HAS_OUT 0
#define FPGA_ONLY_MASTER_X_MAX_HAS_TRI 0
#define FPGA_ONLY_MASTER_X_MAX_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_X_MAX_RESET_VALUE 0

/*
 * Macros for device 'x_min', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_X_MIN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_X_MIN_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_X_MIN_COMPONENT_NAME x_min
#define FPGA_ONLY_MASTER_X_MIN_BASE 0x10030
#define FPGA_ONLY_MASTER_X_MIN_SPAN 32
#define FPGA_ONLY_MASTER_X_MIN_END 0x1004f
#define FPGA_ONLY_MASTER_X_MIN_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_X_MIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_X_MIN_CAPTURE 0
#define FPGA_ONLY_MASTER_X_MIN_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_X_MIN_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_X_MIN_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_X_MIN_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_X_MIN_FREQ 56000000
#define FPGA_ONLY_MASTER_X_MIN_HAS_IN 1
#define FPGA_ONLY_MASTER_X_MIN_HAS_OUT 0
#define FPGA_ONLY_MASTER_X_MIN_HAS_TRI 0
#define FPGA_ONLY_MASTER_X_MIN_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_X_MIN_RESET_VALUE 0

/*
 * Macros for device 'req_res', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_REQ_RES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_REQ_RES_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_REQ_RES_COMPONENT_NAME req_res
#define FPGA_ONLY_MASTER_REQ_RES_BASE 0x10040
#define FPGA_ONLY_MASTER_REQ_RES_SPAN 32
#define FPGA_ONLY_MASTER_REQ_RES_END 0x1005f
#define FPGA_ONLY_MASTER_REQ_RES_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_REQ_RES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_REQ_RES_CAPTURE 0
#define FPGA_ONLY_MASTER_REQ_RES_DATA_WIDTH 1
#define FPGA_ONLY_MASTER_REQ_RES_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_REQ_RES_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_REQ_RES_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_REQ_RES_FREQ 56000000
#define FPGA_ONLY_MASTER_REQ_RES_HAS_IN 0
#define FPGA_ONLY_MASTER_REQ_RES_HAS_OUT 1
#define FPGA_ONLY_MASTER_REQ_RES_HAS_TRI 0
#define FPGA_ONLY_MASTER_REQ_RES_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_REQ_RES_RESET_VALUE 0

/*
 * Macros for device 'addr_out', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_ADDR_OUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_ADDR_OUT_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_ADDR_OUT_COMPONENT_NAME addr_out
#define FPGA_ONLY_MASTER_ADDR_OUT_BASE 0x10050
#define FPGA_ONLY_MASTER_ADDR_OUT_SPAN 32
#define FPGA_ONLY_MASTER_ADDR_OUT_END 0x1006f
#define FPGA_ONLY_MASTER_ADDR_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_ADDR_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_ADDR_OUT_CAPTURE 0
#define FPGA_ONLY_MASTER_ADDR_OUT_DATA_WIDTH 8
#define FPGA_ONLY_MASTER_ADDR_OUT_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_ADDR_OUT_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_ADDR_OUT_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_ADDR_OUT_FREQ 56000000
#define FPGA_ONLY_MASTER_ADDR_OUT_HAS_IN 0
#define FPGA_ONLY_MASTER_ADDR_OUT_HAS_OUT 1
#define FPGA_ONLY_MASTER_ADDR_OUT_HAS_TRI 0
#define FPGA_ONLY_MASTER_ADDR_OUT_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_ADDR_OUT_RESET_VALUE 0

/*
 * Macros for device 'box_addr', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_ADDR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_ADDR_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_ADDR_COMPONENT_NAME box_addr
#define FPGA_ONLY_MASTER_BOX_ADDR_BASE 0x10060
#define FPGA_ONLY_MASTER_BOX_ADDR_SPAN 32
#define FPGA_ONLY_MASTER_BOX_ADDR_END 0x1007f
#define FPGA_ONLY_MASTER_BOX_ADDR_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_ADDR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_ADDR_CAPTURE 0
#define FPGA_ONLY_MASTER_BOX_ADDR_DATA_WIDTH 8
#define FPGA_ONLY_MASTER_BOX_ADDR_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_ADDR_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_ADDR_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_ADDR_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_ADDR_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_ADDR_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_ADDR_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_ADDR_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_ADDR_RESET_VALUE 0

/*
 * Macros for device 'box_n', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_N_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_N_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_N_COMPONENT_NAME box_n
#define FPGA_ONLY_MASTER_BOX_N_BASE 0x10070
#define FPGA_ONLY_MASTER_BOX_N_SPAN 32
#define FPGA_ONLY_MASTER_BOX_N_END 0x1008f
#define FPGA_ONLY_MASTER_BOX_N_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_N_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_N_CAPTURE 0
#define FPGA_ONLY_MASTER_BOX_N_DATA_WIDTH 8
#define FPGA_ONLY_MASTER_BOX_N_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_N_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_N_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_N_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_N_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_N_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_N_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_N_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_N_RESET_VALUE 0

/*
 * Macros for device 'box_req', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_REQ_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_REQ_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_REQ_COMPONENT_NAME box_req
#define FPGA_ONLY_MASTER_BOX_REQ_BASE 0x10080
#define FPGA_ONLY_MASTER_BOX_REQ_SPAN 32
#define FPGA_ONLY_MASTER_BOX_REQ_END 0x1009f
#define FPGA_ONLY_MASTER_BOX_REQ_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_REQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_REQ_CAPTURE 1
#define FPGA_ONLY_MASTER_BOX_REQ_DATA_WIDTH 1
#define FPGA_ONLY_MASTER_BOX_REQ_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_REQ_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_REQ_EDGE_TYPE RISING
#define FPGA_ONLY_MASTER_BOX_REQ_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_REQ_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_REQ_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_REQ_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_REQ_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_REQ_RESET_VALUE 0

/*
 * Macros for device 'n_pix', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_N_PIX_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_N_PIX_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_N_PIX_COMPONENT_NAME n_pix
#define FPGA_ONLY_MASTER_N_PIX_BASE 0x10090
#define FPGA_ONLY_MASTER_N_PIX_SPAN 32
#define FPGA_ONLY_MASTER_N_PIX_END 0x100af
#define FPGA_ONLY_MASTER_N_PIX_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_N_PIX_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_N_PIX_CAPTURE 1
#define FPGA_ONLY_MASTER_N_PIX_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_N_PIX_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_N_PIX_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_N_PIX_EDGE_TYPE ANY
#define FPGA_ONLY_MASTER_N_PIX_FREQ 56000000
#define FPGA_ONLY_MASTER_N_PIX_HAS_IN 1
#define FPGA_ONLY_MASTER_N_PIX_HAS_OUT 0
#define FPGA_ONLY_MASTER_N_PIX_HAS_TRI 0
#define FPGA_ONLY_MASTER_N_PIX_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_N_PIX_RESET_VALUE 0

/*
 * Macros for device 'box_yn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_YN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_YN_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_YN_COMPONENT_NAME box_yn
#define FPGA_ONLY_MASTER_BOX_YN_BASE 0x100a0
#define FPGA_ONLY_MASTER_BOX_YN_SPAN 32
#define FPGA_ONLY_MASTER_BOX_YN_END 0x100bf
#define FPGA_ONLY_MASTER_BOX_YN_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_YN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_YN_CAPTURE 1
#define FPGA_ONLY_MASTER_BOX_YN_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_BOX_YN_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_YN_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_YN_EDGE_TYPE ANY
#define FPGA_ONLY_MASTER_BOX_YN_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_YN_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_YN_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_YN_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_YN_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_YN_RESET_VALUE 0

/*
 * Macros for device 'box_y0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_Y0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_Y0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_Y0_COMPONENT_NAME box_y0
#define FPGA_ONLY_MASTER_BOX_Y0_BASE 0x100b0
#define FPGA_ONLY_MASTER_BOX_Y0_SPAN 32
#define FPGA_ONLY_MASTER_BOX_Y0_END 0x100cf
#define FPGA_ONLY_MASTER_BOX_Y0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_Y0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_Y0_CAPTURE 1
#define FPGA_ONLY_MASTER_BOX_Y0_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_BOX_Y0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_Y0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_Y0_EDGE_TYPE ANY
#define FPGA_ONLY_MASTER_BOX_Y0_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_Y0_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_Y0_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_Y0_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_Y0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_Y0_RESET_VALUE 0

/*
 * Macros for device 'test_16t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TEST_16T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TEST_16T_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TEST_16T_0_COMPONENT_NAME test_16t_0
#define FPGA_ONLY_MASTER_TEST_16T_0_BASE 0x100c0
#define FPGA_ONLY_MASTER_TEST_16T_0_SPAN 32
#define FPGA_ONLY_MASTER_TEST_16T_0_END 0x100df
#define FPGA_ONLY_MASTER_TEST_16T_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TEST_16T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TEST_16T_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TEST_16T_0_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_TEST_16T_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TEST_16T_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TEST_16T_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TEST_16T_0_FREQ 56000000
#define FPGA_ONLY_MASTER_TEST_16T_0_HAS_IN 0
#define FPGA_ONLY_MASTER_TEST_16T_0_HAS_OUT 1
#define FPGA_ONLY_MASTER_TEST_16T_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TEST_16T_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TEST_16T_0_RESET_VALUE 0

/*
 * Macros for device 'test_32t_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TEST_32T_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TEST_32T_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TEST_32T_0_COMPONENT_NAME test_32t_0
#define FPGA_ONLY_MASTER_TEST_32T_0_BASE 0x100d0
#define FPGA_ONLY_MASTER_TEST_32T_0_SPAN 32
#define FPGA_ONLY_MASTER_TEST_32T_0_END 0x100ef
#define FPGA_ONLY_MASTER_TEST_32T_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TEST_32T_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TEST_32T_0_CAPTURE 0
#define FPGA_ONLY_MASTER_TEST_32T_0_DATA_WIDTH 32
#define FPGA_ONLY_MASTER_TEST_32T_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TEST_32T_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TEST_32T_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TEST_32T_0_FREQ 56000000
#define FPGA_ONLY_MASTER_TEST_32T_0_HAS_IN 0
#define FPGA_ONLY_MASTER_TEST_32T_0_HAS_OUT 1
#define FPGA_ONLY_MASTER_TEST_32T_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_TEST_32T_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TEST_32T_0_RESET_VALUE 0

/*
 * Macros for device 'n_fish', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_N_FISH_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_N_FISH_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_N_FISH_COMPONENT_NAME n_fish
#define FPGA_ONLY_MASTER_N_FISH_BASE 0x100e0
#define FPGA_ONLY_MASTER_N_FISH_SPAN 32
#define FPGA_ONLY_MASTER_N_FISH_END 0x100ff
#define FPGA_ONLY_MASTER_N_FISH_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_N_FISH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_N_FISH_CAPTURE 0
#define FPGA_ONLY_MASTER_N_FISH_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_N_FISH_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_N_FISH_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_N_FISH_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_N_FISH_FREQ 56000000
#define FPGA_ONLY_MASTER_N_FISH_HAS_IN 0
#define FPGA_ONLY_MASTER_N_FISH_HAS_OUT 1
#define FPGA_ONLY_MASTER_N_FISH_HAS_TRI 0
#define FPGA_ONLY_MASTER_N_FISH_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_N_FISH_RESET_VALUE 0

/*
 * Macros for device 'box_xn', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_XN_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_XN_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_XN_COMPONENT_NAME box_xn
#define FPGA_ONLY_MASTER_BOX_XN_BASE 0x100f0
#define FPGA_ONLY_MASTER_BOX_XN_SPAN 32
#define FPGA_ONLY_MASTER_BOX_XN_END 0x1010f
#define FPGA_ONLY_MASTER_BOX_XN_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_XN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_XN_CAPTURE 1
#define FPGA_ONLY_MASTER_BOX_XN_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_BOX_XN_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_XN_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_XN_EDGE_TYPE ANY
#define FPGA_ONLY_MASTER_BOX_XN_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_XN_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_XN_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_XN_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_XN_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_XN_RESET_VALUE 0

/*
 * Macros for device 'box_x0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_BOX_X0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_BOX_X0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_BOX_X0_COMPONENT_NAME box_x0
#define FPGA_ONLY_MASTER_BOX_X0_BASE 0x10100
#define FPGA_ONLY_MASTER_BOX_X0_SPAN 32
#define FPGA_ONLY_MASTER_BOX_X0_END 0x1011f
#define FPGA_ONLY_MASTER_BOX_X0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_X0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_BOX_X0_CAPTURE 1
#define FPGA_ONLY_MASTER_BOX_X0_DATA_WIDTH 16
#define FPGA_ONLY_MASTER_BOX_X0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_BOX_X0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_BOX_X0_EDGE_TYPE ANY
#define FPGA_ONLY_MASTER_BOX_X0_FREQ 56000000
#define FPGA_ONLY_MASTER_BOX_X0_HAS_IN 1
#define FPGA_ONLY_MASTER_BOX_X0_HAS_OUT 0
#define FPGA_ONLY_MASTER_BOX_X0_HAS_TRI 0
#define FPGA_ONLY_MASTER_BOX_X0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_BOX_X0_RESET_VALUE 0

/*
 * Macros for device 'reset_cnt', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_RESET_CNT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_RESET_CNT_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_RESET_CNT_COMPONENT_NAME reset_cnt
#define FPGA_ONLY_MASTER_RESET_CNT_BASE 0x10200
#define FPGA_ONLY_MASTER_RESET_CNT_SPAN 32
#define FPGA_ONLY_MASTER_RESET_CNT_END 0x1021f
#define FPGA_ONLY_MASTER_RESET_CNT_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_RESET_CNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_RESET_CNT_CAPTURE 0
#define FPGA_ONLY_MASTER_RESET_CNT_DATA_WIDTH 1
#define FPGA_ONLY_MASTER_RESET_CNT_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_RESET_CNT_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_RESET_CNT_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_RESET_CNT_FREQ 56000000
#define FPGA_ONLY_MASTER_RESET_CNT_HAS_IN 1
#define FPGA_ONLY_MASTER_RESET_CNT_HAS_OUT 0
#define FPGA_ONLY_MASTER_RESET_CNT_HAS_TRI 0
#define FPGA_ONLY_MASTER_RESET_CNT_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_RESET_CNT_RESET_VALUE 0

/*
 * Macros for device 'sw_mass', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SW_MASS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SW_MASS_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_SW_MASS_COMPONENT_NAME sw_mass
#define FPGA_ONLY_MASTER_SW_MASS_BASE 0x10210
#define FPGA_ONLY_MASTER_SW_MASS_SPAN 32
#define FPGA_ONLY_MASTER_SW_MASS_END 0x1022f
#define FPGA_ONLY_MASTER_SW_MASS_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_SW_MASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_SW_MASS_CAPTURE 0
#define FPGA_ONLY_MASTER_SW_MASS_DATA_WIDTH 2
#define FPGA_ONLY_MASTER_SW_MASS_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_SW_MASS_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_SW_MASS_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_SW_MASS_FREQ 56000000
#define FPGA_ONLY_MASTER_SW_MASS_HAS_IN 1
#define FPGA_ONLY_MASTER_SW_MASS_HAS_OUT 0
#define FPGA_ONLY_MASTER_SW_MASS_HAS_TRI 0
#define FPGA_ONLY_MASTER_SW_MASS_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_SW_MASS_RESET_VALUE 0

/*
 * Macros for device 'test_cnt_balls', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_TEST_CNT_BALLS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_COMPONENT_NAME test_cnt_balls
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_BASE 0x10220
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_SPAN 32
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_END 0x1023f
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_CAPTURE 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_DATA_WIDTH 1
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_FREQ 56000000
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_HAS_IN 1
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_HAS_OUT 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_HAS_TRI 0
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_TEST_CNT_BALLS_RESET_VALUE 0

/*
 * Macros for device 'con_yark', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_CON_YARK_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_CON_YARK_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_CON_YARK_COMPONENT_NAME con_yark
#define FPGA_ONLY_MASTER_CON_YARK_BASE 0x10230
#define FPGA_ONLY_MASTER_CON_YARK_SPAN 32
#define FPGA_ONLY_MASTER_CON_YARK_END 0x1024f
#define FPGA_ONLY_MASTER_CON_YARK_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_CON_YARK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_CON_YARK_CAPTURE 0
#define FPGA_ONLY_MASTER_CON_YARK_DATA_WIDTH 8
#define FPGA_ONLY_MASTER_CON_YARK_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_CON_YARK_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_CON_YARK_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_CON_YARK_FREQ 56000000
#define FPGA_ONLY_MASTER_CON_YARK_HAS_IN 0
#define FPGA_ONLY_MASTER_CON_YARK_HAS_OUT 1
#define FPGA_ONLY_MASTER_CON_YARK_HAS_TRI 0
#define FPGA_ONLY_MASTER_CON_YARK_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_CON_YARK_RESET_VALUE 0

/*
 * Macros for device 'x1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_X1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_X1_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_X1_0_COMPONENT_NAME x1_0
#define FPGA_ONLY_MASTER_X1_0_BASE 0x10240
#define FPGA_ONLY_MASTER_X1_0_SPAN 32
#define FPGA_ONLY_MASTER_X1_0_END 0x1025f
#define FPGA_ONLY_MASTER_X1_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_X1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_X1_0_CAPTURE 0
#define FPGA_ONLY_MASTER_X1_0_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_X1_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_X1_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_X1_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_X1_0_FREQ 56000000
#define FPGA_ONLY_MASTER_X1_0_HAS_IN 0
#define FPGA_ONLY_MASTER_X1_0_HAS_OUT 1
#define FPGA_ONLY_MASTER_X1_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_X1_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_X1_0_RESET_VALUE 0

/*
 * Macros for device 'x2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_X2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_X2_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_X2_0_COMPONENT_NAME x2_0
#define FPGA_ONLY_MASTER_X2_0_BASE 0x10250
#define FPGA_ONLY_MASTER_X2_0_SPAN 32
#define FPGA_ONLY_MASTER_X2_0_END 0x1026f
#define FPGA_ONLY_MASTER_X2_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_X2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_X2_0_CAPTURE 0
#define FPGA_ONLY_MASTER_X2_0_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_X2_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_X2_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_X2_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_X2_0_FREQ 56000000
#define FPGA_ONLY_MASTER_X2_0_HAS_IN 0
#define FPGA_ONLY_MASTER_X2_0_HAS_OUT 1
#define FPGA_ONLY_MASTER_X2_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_X2_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_X2_0_RESET_VALUE 0

/*
 * Macros for device 'y1_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_Y1_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_Y1_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_Y1_0_COMPONENT_NAME y1_0
#define FPGA_ONLY_MASTER_Y1_0_BASE 0x10260
#define FPGA_ONLY_MASTER_Y1_0_SPAN 32
#define FPGA_ONLY_MASTER_Y1_0_END 0x1027f
#define FPGA_ONLY_MASTER_Y1_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_Y1_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_Y1_0_CAPTURE 0
#define FPGA_ONLY_MASTER_Y1_0_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_Y1_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_Y1_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_Y1_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_Y1_0_FREQ 56000000
#define FPGA_ONLY_MASTER_Y1_0_HAS_IN 0
#define FPGA_ONLY_MASTER_Y1_0_HAS_OUT 1
#define FPGA_ONLY_MASTER_Y1_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_Y1_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_Y1_0_RESET_VALUE 0

/*
 * Macros for device 'y2_0', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_Y2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_Y2_0_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_Y2_0_COMPONENT_NAME y2_0
#define FPGA_ONLY_MASTER_Y2_0_BASE 0x10270
#define FPGA_ONLY_MASTER_Y2_0_SPAN 32
#define FPGA_ONLY_MASTER_Y2_0_END 0x1028f
#define FPGA_ONLY_MASTER_Y2_0_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_Y2_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_Y2_0_CAPTURE 0
#define FPGA_ONLY_MASTER_Y2_0_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_Y2_0_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_Y2_0_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_Y2_0_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_Y2_0_FREQ 56000000
#define FPGA_ONLY_MASTER_Y2_0_HAS_IN 0
#define FPGA_ONLY_MASTER_Y2_0_HAS_OUT 1
#define FPGA_ONLY_MASTER_Y2_0_HAS_TRI 0
#define FPGA_ONLY_MASTER_Y2_0_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_Y2_0_RESET_VALUE 0

/*
 * Macros for device 'del_x', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_DEL_X_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_DEL_X_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_DEL_X_COMPONENT_NAME del_x
#define FPGA_ONLY_MASTER_DEL_X_BASE 0x10280
#define FPGA_ONLY_MASTER_DEL_X_SPAN 32
#define FPGA_ONLY_MASTER_DEL_X_END 0x1029f
#define FPGA_ONLY_MASTER_DEL_X_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_DEL_X_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_DEL_X_CAPTURE 0
#define FPGA_ONLY_MASTER_DEL_X_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_DEL_X_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_DEL_X_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_DEL_X_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_DEL_X_FREQ 56000000
#define FPGA_ONLY_MASTER_DEL_X_HAS_IN 0
#define FPGA_ONLY_MASTER_DEL_X_HAS_OUT 1
#define FPGA_ONLY_MASTER_DEL_X_HAS_TRI 0
#define FPGA_ONLY_MASTER_DEL_X_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_DEL_X_RESET_VALUE 0

/*
 * Macros for device 'del_y', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_DEL_Y_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_DEL_Y_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_DEL_Y_COMPONENT_NAME del_y
#define FPGA_ONLY_MASTER_DEL_Y_BASE 0x10290
#define FPGA_ONLY_MASTER_DEL_Y_SPAN 32
#define FPGA_ONLY_MASTER_DEL_Y_END 0x102af
#define FPGA_ONLY_MASTER_DEL_Y_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_DEL_Y_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_DEL_Y_CAPTURE 0
#define FPGA_ONLY_MASTER_DEL_Y_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_DEL_Y_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_DEL_Y_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_DEL_Y_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_DEL_Y_FREQ 56000000
#define FPGA_ONLY_MASTER_DEL_Y_HAS_IN 0
#define FPGA_ONLY_MASTER_DEL_Y_HAS_OUT 1
#define FPGA_ONLY_MASTER_DEL_Y_HAS_TRI 0
#define FPGA_ONLY_MASTER_DEL_Y_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_DEL_Y_RESET_VALUE 0

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define FPGA_ONLY_MASTER_JTAG_UART_COMPONENT_NAME jtag_uart
#define FPGA_ONLY_MASTER_JTAG_UART_BASE 0x20000
#define FPGA_ONLY_MASTER_JTAG_UART_SPAN 16
#define FPGA_ONLY_MASTER_JTAG_UART_END 0x2000f
#define FPGA_ONLY_MASTER_JTAG_UART_READ_DEPTH 64
#define FPGA_ONLY_MASTER_JTAG_UART_READ_THRESHOLD 8
#define FPGA_ONLY_MASTER_JTAG_UART_WRITE_DEPTH 64
#define FPGA_ONLY_MASTER_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define FPGA_ONLY_MASTER_PIO_LED_COMPONENT_NAME pio_led
#define FPGA_ONLY_MASTER_PIO_LED_BASE 0x20010
#define FPGA_ONLY_MASTER_PIO_LED_SPAN 32
#define FPGA_ONLY_MASTER_PIO_LED_END 0x2002f
#define FPGA_ONLY_MASTER_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_ONLY_MASTER_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_ONLY_MASTER_PIO_LED_CAPTURE 0
#define FPGA_ONLY_MASTER_PIO_LED_DATA_WIDTH 10
#define FPGA_ONLY_MASTER_PIO_LED_DO_TEST_BENCH_WIRING 0
#define FPGA_ONLY_MASTER_PIO_LED_DRIVEN_SIM_VALUE 0
#define FPGA_ONLY_MASTER_PIO_LED_EDGE_TYPE NONE
#define FPGA_ONLY_MASTER_PIO_LED_FREQ 56000000
#define FPGA_ONLY_MASTER_PIO_LED_HAS_IN 0
#define FPGA_ONLY_MASTER_PIO_LED_HAS_OUT 1
#define FPGA_ONLY_MASTER_PIO_LED_HAS_TRI 0
#define FPGA_ONLY_MASTER_PIO_LED_IRQ_TYPE NONE
#define FPGA_ONLY_MASTER_PIO_LED_RESET_VALUE 0

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_BASE 0x30000
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_SPAN 8
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_END 0x30007


#endif /* _ALTERA_SOC_SYSTEM_H_ */
